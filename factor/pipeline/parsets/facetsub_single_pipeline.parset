pipeline.steps = [update_shifted_all_hosts, update_input_bands_hosts, shift_subdata_to_field, copy_column, shift_model_to_field, copy_shifted_model_map, copy_shifted_subdata_map]

pipeline.pluginpath                                     =   {{ pipeline_dir }}/plugins

update_shifted_all_hosts.control.kind                   =   plugin
update_shifted_all_hosts.control.type                   =   updateHosts
update_shifted_all_hosts.control.mapfile_in             =   {{ shifted_bands_datamap }}
update_shifted_all_hosts.control.hosts                  =   {{ hosts }}

update_input_bands_hosts.control.kind                   =   plugin
update_input_bands_hosts.control.type                   =   updateHosts
update_input_bands_hosts.control.mapfile_in             =   {{ input_bands_datamap }}
update_input_bands_hosts.control.hosts                  =   {{ hosts }}

shift_subdata_to_field.control.type                     =   dppp
shift_subdata_to_field.control.opts.mapfile_in          =   {{ shifted_bands_datamap }}
shift_subdata_to_field.control.opts.inputkey            =   msin
shift_subdata_to_field.argument.msin.datacolumn         =   SUBTRACTED_DATA
shift_subdata_to_field.argument.msout.overwrite         =   True
shift_subdata_to_field.argument.msout.writefullresflag  =   False
shift_subdata_to_field.argument.steps                   =   [shift]
shift_subdata_to_field.argument.shift.type              =   phaseshifter
shift_subdata_to_field.argument.shift.phasecenter       =   [{{ field_ra }}deg, {{ field_dec }}deg]

copy_column.control.type                                =   copy_column
copy_column.control.mapfiles_in                         =   [shift_subdata_to_field.output.mapfile,{{ input_bands_datamap }}]
copy_column.control.inputkeys                           =   [shiftedfile,datafile]
copy_column.argument.flags                              =   [shiftedfile,datafile,DATA,SUBTRACTED_DATA_ALL_NEW]

shift_model_to_field.control.type                       =   dppp
shift_model_to_field.control.opts.mapfile_in            =   {{ shifted_bands_datamap }}
shift_model_to_field.control.opts.inputkey              =   msin
shift_model_to_field.argument.msin.datacolumn           =   MODEL_DATA
shift_model_to_field.argument.msout.overwrite           =   True
shift_model_to_field.argument.msout.writefullresflag    =   False
shift_model_to_field.argument.steps                     =   [shift]
shift_model_to_field.argument.shift.type                =   phaseshifter
shift_model_to_field.argument.shift.phasecenter         =   [{{ field_ra }}deg, {{ field_dec }}deg]

copy_shifted_model_map.control.kind                     =   plugin
copy_shifted_model_map.control.type                     =   copyMapfile
copy_shifted_model_map.control.mapfile_in               =   shift_model_to_field.output.mapfile
copy_shifted_model_map.control.mapfile_dir              =   {{ mapfile_dir }}
copy_shifted_model_map.control.filename                 =   shifted_to_field_models.datamap

copy_shifted_subdata_map.control.kind                   =   plugin
copy_shifted_subdata_map.control.type                   =   copyMapfile
copy_shifted_subdata_map.control.mapfile_in             =   shift_subdata_to_field.output.mapfile
copy_shifted_subdata_map.control.mapfile_dir            =   {{ mapfile_dir }}
copy_shifted_subdata_map.control.filename               =   shifted_to_field_subdata.datamap
