pipeline.steps = [create_ms_map, create_parmdb_map, create_full_skymodels_map, make_facet_skymodels_all, shift_empty, add_all_facet_sources, average, copy_all_map, expand_merged_parmdb_map, apply_dir_dep_fast, apply_dir_dep_slow, create_compressed_mapfile, concat_averaged, wsclean1, create_imagebase_map1, adjust_wsclean_mapfile1, copy_beam_info, mask, wsclean2, create_imagebase_map2, adjust_wsclean_mapfile2]

pipeline.pluginpath                               =   {{ pipeline_dir }}/plugins

create_ms_map.control.kind                        =   plugin
create_ms_map.control.type                        =   addMSMapfile
create_ms_map.control.hosts                       =   {{ hosts }}
create_ms_map.control.folder                      =   {{ input_dir }}
create_ms_map.control.mapfile_dir                 =   {{ mapfile_dir }}
create_ms_map.control.filename                    =   input_bands.datamap

create_parmdb_map.control.kind                    =   plugin
create_parmdb_map.control.type                    =   addParmdbMapfile
create_parmdb_map.control.mapfile_in              =   create_ms_map.output.mapfile
create_parmdb_map.control.parmdb_name             =   {{ dir_indep_parmdb_name }}
create_parmdb_map.control.mapfile_dir             =   {{ mapfile_dir }}
create_parmdb_map.control.filename                =   dir_indep_instrument_parmdbs.datamap

create_full_skymodels_map.control.kind            =   plugin
create_full_skymodels_map.control.type            =   addListMapfile
create_full_skymodels_map.control.hosts           =   {{ hosts }}
create_full_skymodels_map.control.files           =   {{ skymodels }}
create_full_skymodels_map.control.mapfile_dir     =   {{ mapfile_dir }}
create_full_skymodels_map.control.filename        =   full_skymodels.datamap

make_facet_skymodels_all.control.type             =   make_facet_skymodel
make_facet_skymodels_all.control.mapfile_in       =   create_full_skymodels_map.output.mapfile
make_facet_skymodels_all.control.inputkey         =   fullmodelfile
make_facet_skymodels_all.control.outputkey        =   outfile
make_facet_skymodels_all.argument.flags           =   [fullmodelfile,outfile,{{ vertices_file }}]
make_facet_skymodels_all.argument.cal_only        =   False

shift_empty.control.type                          =   dppp
shift_empty.control.opts.mapfile_in               =   create_ms_map.output.mapfile
shift_empty.control.opts.inputkey                 =   msin
shift_empty.parsetarg.msin.datacolumn             =   SUBTRACTED_DATA_ALL_NEW
shift_empty.parsetarg.msout.writefullresflag      =   False
shift_empty.parsetarg.steps                       =   [shift]
shift_empty.parsetarg.shift.type                  =   phaseshifter
shift_empty.parsetarg.shift.phasecenter           =   [{{ facet_ra }}deg, {{ facet_dec }}deg]

add_all_facet_sources.control.type                =   calibrate-stand-alone_new
add_all_facet_sources.argument.observation        =   shift_empty.output.mapfile
add_all_facet_sources.argument.parset             =   {{ parset_dir }}/facet_dirindep_add_all.parset
add_all_facet_sources.argument.catalog            =   make_facet_skymodels_all.output.mapfile
add_all_facet_sources.argument.parmdb             =   create_parmdb_map.output.mapfile
add_all_facet_sources.argument.replace-sourcedb   =   True
add_all_facet_sources.argument.replace-parmdb     =   True

average.control.type                              =   dppp
average.control.mapfile_in                        =   shift_empty.output.mapfile
average.control.inputkey                          =   msin
average.parsetarg.msin.datacolumn                 =   FACET_DATA_ALL
average.parsetarg.msout.writefullresflag          =   False
average.parsetarg.steps                           =   [avg]
average.parsetarg.avg.type                        =   squash
average.parsetarg.avg.freqstep                    =   {{ facetimage_freqstep }}
average.parsetarg.avg.timestep                    =   {{ facetimage_timestep }}

copy_all_map.control.kind                         =   plugin
copy_all_map.control.type                         =   copyMapfile
copy_all_map.control.mapfile_in                   =   average.output.mapfile
copy_all_map.control.mapfile_dir                  =   {{ mapfile_dir }}
copy_all_map.control.filename                     =   shifted_all_final_bands.datamap

expand_merged_parmdb_map.control.kind             =   plugin
expand_merged_parmdb_map.control.type             =   expandMapfile
expand_merged_parmdb_map.control.mapfile_in       =   {{ dir_dep_parmdb_datamap }}
expand_merged_parmdb_map.control.mapfile_to_match =   average.output.mapfile
expand_merged_parmdb_map.control.mapfile_dir      =   {{ mapfile_dir }}
expand_merged_parmdb_map.control.filename         =   expand_merged_parmdbs.datamap

apply_dir_dep_fast.control.type                   =   calibrate-stand-alone_new
apply_dir_dep_fast.control.mapfiles_in            =   [average.output.mapfile,expand_merged_parmdb_map.output.mapfile]
apply_dir_dep_fast.control.inputkeys              =   [inputms,inputparmdb]
apply_dir_dep_fast.argument.observation           =   inputms
apply_dir_dep_fast.argument.parset                =   {{ parset_dir }}//facet_dirdep_apply_fast.parset
apply_dir_dep_fast.argument.catalog               =   {{ skymodel_dir }}/empty.skymodel
apply_dir_dep_fast.argument.parmdb                =   inputparmdb
apply_dir_dep_fast.argument.replace-sourcedb      =   True
apply_dir_dep_fast.argument.replace-parmdb        =   True

apply_dir_dep_slow.control.type                   =   calibrate-stand-alone_new
apply_dir_dep_slow.control.mapfiles_in            =   [average.output.mapfile,expand_merged_parmdb_map.output.mapfile]
apply_dir_dep_slow.control.inputkeys              =   [inputms,inputparmdb]
apply_dir_dep_slow.argument.observation           =   inputms
apply_dir_dep_slow.argument.parset                =   {{ parset_dir }}//facet_dirdep_apply_slow.parset
apply_dir_dep_slow.argument.catalog               =   {{ skymodel_dir }}/empty.skymodel
apply_dir_dep_slow.argument.parmdb                =   inputparmdb
apply_dir_dep_slow.argument.replace-sourcedb      =   True
apply_dir_dep_slow.argument.replace-parmdb        =   True

create_compressed_mapfile.control.kind            =   plugin
create_compressed_mapfile.control.type            =   compressMapfile
create_compressed_mapfile.control.mapfile_in      =   average.output.mapfile
create_compressed_mapfile.control.mapfile_dir     =   {{ mapfile_dir }}
create_compressed_mapfile.control.filename        =   concat_averaged_input.datamap

concat_averaged.control.type                      =   dppp
concat_averaged.control.mapfile_in                =   create_compressed_mapfile.output.mapfile
concat_averaged.control.inputkey                  =   msin
concat_averaged.argument.msin.datacolumn          =   CORRECTED_DATA
concat_averaged.argument.msout.writefullresflag   =   False
concat_averaged.argument.steps                    =   []

wsclean1.control.type                             =   wsclean
wsclean1.control.mapfile_in                       =   concat_averaged.output.mapfile
wsclean1.control.inputkey                         =   msfile
wsclean1.argument.flags                           =   [-no-update-model-required,-joinchannels,msfile]
wsclean1.argument.size                            =   {{ facet_imsize }} {{ facet_imsize }}
wsclean1.argument.niter                           =   15000
wsclean1.argument.threshold                       =   0.0
wsclean1.argument.pol                             =   I
wsclean1.argument.weight                          =   briggs -0.5
wsclean1.argument.mgain                           =   0.5
wsclean1.argument.gain                            =   0.1
wsclean1.argument.cleanborder                     =   0
wsclean1.argument.minuv-l                         =   80
wsclean1.argument.maxuv-l                         =   1000000
wsclean1.argument.scale                           =   0.000417
wsclean1.argument.channelsout                     =   {{ nchannels }}
wsclean1.argument.mem                             =   {{ max_percent_memory }}
wsclean1.argument.j                               =   {{ max_cpus_per_node }}

create_imagebase_map1.control.kind                =   plugin
create_imagebase_map1.control.type                =   trimMapfile
create_imagebase_map1.control.mapfile_in          =   wsclean1.output.wsclean1-image.fits.mapfile
create_imagebase_map1.control.trim                =   -
create_imagebase_map1.control.mapfile_dir         =   {{ mapfile_dir }}
create_imagebase_map1.control.filename            =   wsclean1_image_rootnames.datamap

adjust_wsclean_mapfile1.control.kind              =   plugin
adjust_wsclean_mapfile1.control.type              =   appendMapfile
adjust_wsclean_mapfile1.control.mapfile_in        =   create_imagebase_map1.output.mapfile
adjust_wsclean_mapfile1.control.append            =   {{ wsclean_suffix }}
adjust_wsclean_mapfile1.control.mapfile_dir       =   {{ mapfile_dir }}
adjust_wsclean_mapfile1.control.filename          =   image1.datamap

copy_beam_info.control.type                       =   copy_beam_info
copy_beam_info.control.mapfile_in                 =   adjust_wsclean_mapfile1.output.mapfile
copy_beam_info.control.inputkey                   =   imagefile
copy_beam_info.argument.flags                     =   [imagefile]

mask.control.type                                 =   make_clean_mask
mask.control.mapfile_in                           =   adjust_wsclean_mapfile1.output.mapfile
mask.control.inputkey                             =   imagefile
mask.control.outputkey                            =   maskfile
mask.argument.flags                               =   [imagefile,maskfile]
mask.argument.threshisl                           =   5
mask.argument.threshpix                           =   5
mask.argument.rmsbox                              =   (80,20)
mask.argument.adaptive_rmsbox                     =   True
mask.argument.img_format                          =   fits
mask.argument.vertices_file                       =   {{ vertices_file }}

wsclean2.control.type                             =   wsclean
wsclean2.control.mapfiles_in                      =   [concat_averaged.output.mapfile,mask.output.mapfile]
wsclean2.control.inputkeys                        =   [msfile,fitsmask]
wsclean2.argument.flags                           =   [-no-update-model-required,-joinchannels,msfile]
wsclean2.argument.fitsmask                        =   fitsmask
wsclean2.argument.size                            =   {{ facet_imsize }} {{ facet_imsize }}
wsclean2.argument.niter                           =   15000
wsclean2.argument.threshold                       =   mask.output.threshold_5sig.mapfile
wsclean2.argument.pol                             =   I
wsclean2.argument.weight                          =   briggs -0.5
wsclean2.argument.mgain                           =   0.5
wsclean2.argument.gain                            =   0.1
wsclean2.argument.cleanborder                     =   0
wsclean2.argument.minuv-l                         =   80
wsclean2.argument.maxuv-l                         =   1000000
wsclean2.argument.scale                           =   0.000417
wsclean2.argument.channelsout                     =   {{ nchannels }}
wsclean2.argument.mem                             =   {{ max_percent_memory }}
wsclean2.argument.j                               =   {{ max_cpus_per_node }}

create_imagebase_map2.control.kind                =   plugin
create_imagebase_map2.control.type                =   trimMapfile
create_imagebase_map2.control.mapfile_in          =   wsclean2.output.wsclean2-image.fits.mapfile
create_imagebase_map2.control.trim                =   -
create_imagebase_map2.control.mapfile_dir         =   {{ mapfile_dir }}
create_imagebase_map2.control.filename            =   wsclean2_image_rootnames.datamap

adjust_wsclean_mapfile2.control.kind              =   plugin
adjust_wsclean_mapfile2.control.type              =   appendMapfile
adjust_wsclean_mapfile2.control.mapfile_in        =   create_imagebase_map2.output.mapfile
adjust_wsclean_mapfile2.control.append            =   {{ wsclean_suffix }}
adjust_wsclean_mapfile2.control.mapfile_dir       =   {{ mapfile_dir }}
adjust_wsclean_mapfile2.control.filename          =   final_image.datamap
