pipeline.steps = [update_mapfile_hosts, create_ms_map, create_parmdb_map, expand_merged_parmdb_map, create_full_skymodels_map, make_facet_skymodels_all, make_sourcedb_all_facet_sources, add_all_facet_sources, create_compressed_mapfile, {% block full_image_steps %}wsclean_image_full1, create_imagebase_map1, adjust_wsclean_mapfile1, copy_beam_info, mask, wsclean_image_full2, create_imagebase_map2, adjust_wsclean_mapfile2{% endblock full_image_steps %}]

pipeline.pluginpath                                     =   {{ pipeline_dir }}/plugins

update_mapfile_hosts.control.kind                       =   plugin
update_mapfile_hosts.control.type                       =   updateHosts
update_mapfile_hosts.control.mapfile_dir                =   input.output.mapfile_dir
update_mapfile_hosts.control.hosts                      =   {{ hosts }}

create_ms_map.control.kind                              =   plugin
create_ms_map.control.type                              =   addListMapfile
create_ms_map.control.hosts                             =   {{ hosts }}
create_ms_map.control.files                             =   {{ ms_files }}
create_ms_map.control.mapfile_dir                       =   input.output.mapfile_dir
create_ms_map.control.filename                          =   input_bands.mapfile

create_parmdb_map.control.kind                          =   plugin
create_parmdb_map.control.type                          =   addListMapfile
create_parmdb_map.control.hosts                         =   {{ hosts }}
create_parmdb_map.control.files                         =   {{ dir_indep_parmdbs }}
create_parmdb_map.control.mapfile_dir                   =   input.output.mapfile_dir
create_parmdb_map.control.filename                      =   dir_indep_instrument_parmdbs.mapfile

expand_merged_parmdb_map.control.kind                   =   plugin
expand_merged_parmdb_map.control.type                   =   expandMapfile
expand_merged_parmdb_map.control.mapfile_in             =   {{ dir_dep_parmdb_mapfile }}
expand_merged_parmdb_map.control.mapfile_to_match       =   create_ms_map.output.mapfile
expand_merged_parmdb_map.control.mapfile_dir            =   input.output.mapfile_dir
expand_merged_parmdb_map.control.filename               =   expand_merged_parmdbs.mapfile

create_full_skymodels_map.control.kind                  =   plugin
create_full_skymodels_map.control.type                  =   addListMapfile
create_full_skymodels_map.control.hosts                 =   {{ hosts }}
create_full_skymodels_map.control.files                 =   {{ skymodels }}
create_full_skymodels_map.control.mapfile_dir           =   input.output.mapfile_dir
create_full_skymodels_map.control.filename              =   full_skymodels.mapfile

make_facet_skymodels_all.control.type                   =   make_facet_skymodel
make_facet_skymodels_all.control.mapfile_in             =   create_full_skymodels_map.output.mapfile
make_facet_skymodels_all.control.inputkey               =   fullmodelfile
make_facet_skymodels_all.control.outputkey              =   outfile
make_facet_skymodels_all.argument.flags                 =   [fullmodelfile,outfile,{{ vertices_file }}]
make_facet_skymodels_all.argument.cal_only              =   False

make_sourcedb_all_facet_sources.control.type            =   make_sourcedb
make_sourcedb_all_facet_sources.control.opts.mapfile_in =   make_facet_skymodels_all.output.mapfile
make_sourcedb_all_facet_sources.control.opts.inputkey   =   in
make_sourcedb_all_facet_sources.argument.format         =   <

add_all_facet_sources.control.type                      =   dppp
add_all_facet_sources.control.opts.mapfiles_in          =   [create_ms_map.output.mapfile,make_sourcedb_all_facet_sources.output.mapfile,create_parmdb_map.output.mapfile,expand_merged_parmdb_map.output.mapfile]
add_all_facet_sources.control.opts.inputkeys            =   [msin,sourcedb,dir_indep_parmdb,dir_dep_parmdb]
add_all_facet_sources.argument.numthreads               =   {{ max_cpus_per_band }}
add_all_facet_sources.argument.msin.datacolumn          =   SUBTRACTED_DATA_ALL_NEW
add_all_facet_sources.argument.msout.overwrite          =   True
add_all_facet_sources.argument.msout.writefullresflag   =   False
add_all_facet_sources.argument.local_scratch_dir        =   {{ local_dir }}
add_all_facet_sources.argument.steps                    =   [shift,add,correct_fast1,correct_fast2,correct_slow,avg]
add_all_facet_sources.argument.shift.type               =   phaseshifter
add_all_facet_sources.argument.shift.phasecenter        =   [{{ facet_ra }}deg, {{ facet_dec }}deg]
add_all_facet_sources.argument.add.type                 =   predict
add_all_facet_sources.argument.add.sourcedb             =   sourcedb
add_all_facet_sources.argument.add.operation            =   add
add_all_facet_sources.argument.add.applycal.parmdb      =   dir_indep_parmdb
add_all_facet_sources.argument.correct_fast1.type       =   applycal
add_all_facet_sources.argument.correct_fast1.parmdb     =   dir_dep_parmdb
add_all_facet_sources.argument.correct_fast1.correction =   tec
add_all_facet_sources.argument.correct_fast1.invert     =   True
add_all_facet_sources.argument.correct_fast2.type       =   applycal
add_all_facet_sources.argument.correct_fast2.parmdb     =   dir_dep_parmdb
add_all_facet_sources.argument.correct_fast2.correction =   commonscalarphase
add_all_facet_sources.argument.correct_fast2.invert     =   True
add_all_facet_sources.argument.correct_slow.type        =   applycal
add_all_facet_sources.argument.correct_slow.parmdb      =   dir_dep_parmdb
add_all_facet_sources.argument.correct_slow.invert      =   True
add_all_facet_sources.argument.avg.type                 =   squash
add_all_facet_sources.argument.avg.freqstep             =   {{ facetimage_freqstep }}
add_all_facet_sources.argument.avg.timestep             =   {{ facetimage_timestep }}

create_compressed_mapfile.control.kind                  =   plugin
create_compressed_mapfile.control.type                  =   compressMapfile
create_compressed_mapfile.control.mapfile_in            =   add_all_facet_sources.output.mapfile
create_compressed_mapfile.control.mapfile_dir           =   input.output.mapfile_dir
create_compressed_mapfile.control.filename              =   concat_averaged_input.mapfile

{% block full_image_parms %}
wsclean_image_full1.control.type                        =   wsclean
wsclean_image_full1.control.mapfile_in                  =   create_compressed_mapfile.output.mapfile
wsclean_image_full1.control.inputkey                    =   msfile
wsclean_image_full1.argument.flags                      =   [-no-update-model-required,{{ wsclean_multiscale }}-fitbeam,-reorder,-joinchannels,msfile]
wsclean_image_full1.argument.size                       =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_image_full1.argument.niter                      =   {{ wsclean_full_image_niter }}
wsclean_image_full1.argument.threshold                  =   {{ wsclean_full_image_threshold_jy }}
wsclean_image_full1.argument.pol                        =   I
wsclean_image_full1.argument.weight                     =   briggs -0.5
wsclean_image_full1.argument.mgain                      =   0.6
wsclean_image_full1.argument.cleanborder                =   0
wsclean_image_full1.argument.minuv-l                    =   80
wsclean_image_full1.argument.scale                      =   0.000417
wsclean_image_full1.argument.channelsout                =   {{ nchannels }}
wsclean_image_full1.argument.mem                        =   {{ max_percent_memory }}
wsclean_image_full1.argument.j                          =   {{ max_cpus_per_img }}
wsclean_image_full1.argument.tempdir                    =   {{ local_dir }}

create_imagebase_map1.control.kind                      =   plugin
create_imagebase_map1.control.type                      =   trimMapfile
create_imagebase_map1.control.mapfile_in                =   wsclean_image_full1.output.wsclean_image_full1-image.fits.mapfile
create_imagebase_map1.control.trim                      =   -
create_imagebase_map1.control.mapfile_dir               =   input.output.mapfile_dir
create_imagebase_map1.control.filename                  =   wsclean_image_full1_image_rootnames.mapfile

adjust_wsclean_mapfile1.control.kind                    =   plugin
adjust_wsclean_mapfile1.control.type                    =   appendMapfile
adjust_wsclean_mapfile1.control.mapfile_in              =   create_imagebase_map1.output.mapfile
adjust_wsclean_mapfile1.control.append                  =   {{ wsclean_suffix }}
adjust_wsclean_mapfile1.control.mapfile_dir             =   input.output.mapfile_dir
adjust_wsclean_mapfile1.control.filename                =   image1.mapfile

copy_beam_info.control.type                             =   copy_beam_info
copy_beam_info.control.mapfile_in                       =   adjust_wsclean_mapfile1.output.mapfile
copy_beam_info.control.inputkey                         =   imagefile
copy_beam_info.argument.flags                           =   [imagefile]

mask.control.type                                       =   make_clean_mask
mask.control.mapfile_in                                 =   adjust_wsclean_mapfile1.output.mapfile
mask.control.inputkey                                   =   imagefile
mask.control.outputkey                                  =   maskfile
mask.argument.flags                                     =   [imagefile,maskfile]
mask.argument.threshisl                                 =   5
mask.argument.threshpix                                 =   5
mask.argument.rmsbox                                    =   (80,20)
mask.argument.adaptive_rmsbox                           =   True
mask.argument.img_format                                =   fits
mask.argument.nsig                                      =   1.0
mask.argument.vertices_file                             =   {{ vertices_file }}

wsclean_image_full2.control.type                        =   wsclean
wsclean_image_full2.control.mapfiles_in                 =   [create_compressed_mapfile.output.mapfile,mask.output.mapfile,mask.output.threshold_5sig.mapfile]
wsclean_image_full2.control.inputkeys                   =   [msfile,fitsmask,threshold]
wsclean_image_full2.argument.flags                      =   [-no-update-model-required,{{ wsclean_multiscale }}-fitbeam,-reorder,-joinchannels,msfile]
wsclean_image_full2.argument.fitsmask                   =   fitsmask
wsclean_image_full2.argument.size                       =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_image_full2.argument.niter                      =   1000000
wsclean_image_full2.argument.threshold                  =   threshold
wsclean_image_full2.argument.pol                        =   I
wsclean_image_full2.argument.weight                     =   briggs -0.5
wsclean_image_full2.argument.mgain                      =   0.6
wsclean_image_full2.argument.cleanborder                =   0
wsclean_image_full2.argument.minuv-l                    =   80
wsclean_image_full2.argument.scale                      =   0.000417
wsclean_image_full2.argument.channelsout                =   {{ nchannels }}
wsclean_image_full2.argument.mem                        =   {{ max_percent_memory }}
wsclean_image_full2.argument.j                          =   {{ max_cpus_per_img }}
wsclean_image_full2.argument.tempdir                    =   {{ local_dir }}

create_imagebase_map2.control.kind                      =   plugin
create_imagebase_map2.control.type                      =   trimMapfile
create_imagebase_map2.control.mapfile_in                =   wsclean_image_full2.output.wsclean_image_full2-image.fits.mapfile
create_imagebase_map2.control.trim                      =   -
create_imagebase_map2.control.mapfile_dir               =   input.output.mapfile_dir
create_imagebase_map2.control.filename                  =   wsclean_image_full2_image_rootnames.mapfile

adjust_wsclean_mapfile2.control.kind                    =   plugin
adjust_wsclean_mapfile2.control.type                    =   appendMapfile
adjust_wsclean_mapfile2.control.mapfile_in              =   create_imagebase_map2.output.mapfile
adjust_wsclean_mapfile2.control.append                  =   {{ wsclean_suffix }}
adjust_wsclean_mapfile2.control.mapfile_dir             =   input.output.mapfile_dir
adjust_wsclean_mapfile2.control.filename                =   final_image.mapfile
{% endblock full_image_parms %}
