pipeline.steps = [update_mapfile_hosts, create_ms_map, create_parmdb_map, create_full_skymodels_map, make_facet_skymodels_all, shift_empty, copy_shifted_map, add_all_facet_sources, expand_merged_parmdb_map, apply_dir_dep_fast, apply_dir_dep_slow, average, create_compressed_mapfile, {% block full_image_steps %}concat_averaged, wsclean_image_full1, create_imagebase_map1, adjust_wsclean_mapfile1, copy_beam_info, mask, wsclean_image_full2, create_imagebase_map2, adjust_wsclean_mapfile2{% endblock full_image_steps %}]

pipeline.pluginpath                               =   {{ pipeline_dir }}/plugins

update_mapfile_hosts.control.kind                 =   plugin
update_mapfile_hosts.control.type                 =   updateHosts
update_mapfile_hosts.control.mapfile_dir          =   input.output.mapfile_dir
update_mapfile_hosts.control.hosts                =   {{ hosts }}

create_ms_map.control.kind                        =   plugin
create_ms_map.control.type                        =   addListMapfile
create_ms_map.control.hosts                       =   {{ hosts }}
create_ms_map.control.files                       =   {{ ms_files }}
create_ms_map.control.mapfile_dir                 =   input.output.mapfile_dir
create_ms_map.control.filename                    =   input_bands.datamap

create_parmdb_map.control.kind                    =   plugin
create_parmdb_map.control.type                    =   addListMapfile
create_parmdb_map.control.hosts                   =   {{ hosts }}
create_parmdb_map.control.files                   =   {{ dir_indep_parmdbs }}
create_parmdb_map.control.mapfile_dir             =   input.output.mapfile_dir
create_parmdb_map.control.filename                =   dir_indep_instrument_parmdbs.datamap

create_full_skymodels_map.control.kind            =   plugin
create_full_skymodels_map.control.type            =   addListMapfile
create_full_skymodels_map.control.hosts           =   {{ hosts }}
create_full_skymodels_map.control.files           =   {{ skymodels }}
create_full_skymodels_map.control.mapfile_dir     =   input.output.mapfile_dir
create_full_skymodels_map.control.filename        =   full_skymodels.datamap

make_facet_skymodels_all.control.type             =   make_facet_skymodel
make_facet_skymodels_all.control.mapfile_in       =   create_full_skymodels_map.output.mapfile
make_facet_skymodels_all.control.inputkey         =   fullmodelfile
make_facet_skymodels_all.control.outputkey        =   outfile
make_facet_skymodels_all.argument.flags           =   [fullmodelfile,outfile,{{ vertices_file }}]
make_facet_skymodels_all.argument.cal_only        =   False

shift_empty.control.type                          =   dppp
shift_empty.control.opts.mapfile_in               =   create_ms_map.output.mapfile
shift_empty.control.opts.inputkey                 =   msin
shift_empty.argument.msin.datacolumn              =   SUBTRACTED_DATA_ALL_NEW
shift_empty.argument.msout.overwrite              =   True
shift_empty.argument.msout.writefullresflag       =   False
shift_empty.argument.local_scratch_dir            =   {{ local_dir }}
shift_empty.argument.steps                        =   [shift]
shift_empty.argument.shift.type                   =   phaseshifter
shift_empty.argument.shift.phasecenter            =   [{{ facet_ra }}deg, {{ facet_dec }}deg]

copy_shifted_map.control.kind                     =   plugin
copy_shifted_map.control.type                     =   copyMapfile
copy_shifted_map.control.mapfile_in               =   shift_empty.output.mapfile
copy_shifted_map.control.mapfile_dir              =   {{ mapfile_dir }}
copy_shifted_map.control.filename                 =   shifted_empty_final_bands.datamap

add_all_facet_sources.control.type                =   calibrate-stand-alone_new
add_all_facet_sources.argument.observation        =   shift_empty.output.mapfile
add_all_facet_sources.argument.parset             =   {{ parset_dir }}/facet_dirindep_add_all.parset
add_all_facet_sources.argument.catalog            =   make_facet_skymodels_all.output.mapfile
add_all_facet_sources.argument.parmdb             =   create_parmdb_map.output.mapfile
add_all_facet_sources.argument.replace-sourcedb   =   True
add_all_facet_sources.argument.replace-parmdb     =   True
add_all_facet_sources.argument.no-columns         =   True

expand_merged_parmdb_map.control.kind             =   plugin
expand_merged_parmdb_map.control.type             =   expandMapfile
expand_merged_parmdb_map.control.mapfile_in       =   {{ dir_dep_parmdb_datamap }}
expand_merged_parmdb_map.control.mapfile_to_match =   shift_empty.output.mapfile
expand_merged_parmdb_map.control.mapfile_dir      =   {{ mapfile_dir }}
expand_merged_parmdb_map.control.filename         =   expand_merged_parmdbs.datamap

apply_dir_dep_fast.control.type                   =   calibrate-stand-alone_new
apply_dir_dep_fast.control.mapfiles_in            =   [shift_empty.output.mapfile,expand_merged_parmdb_map.output.mapfile]
apply_dir_dep_fast.control.inputkeys              =   [inputms,inputparmdb]
apply_dir_dep_fast.argument.observation           =   inputms
apply_dir_dep_fast.argument.parset                =   {{ parset_dir }}//facet_dirdep_apply_fast.parset
apply_dir_dep_fast.argument.catalog               =   {{ skymodel_dir }}/empty.skymodel
apply_dir_dep_fast.argument.parmdb                =   inputparmdb
apply_dir_dep_fast.argument.replace-sourcedb      =   True
apply_dir_dep_fast.argument.replace-parmdb        =   True

apply_dir_dep_slow.control.type                   =   calibrate-stand-alone_new
apply_dir_dep_slow.control.mapfiles_in            =   [shift_empty.output.mapfile,expand_merged_parmdb_map.output.mapfile]
apply_dir_dep_slow.control.inputkeys              =   [inputms,inputparmdb]
apply_dir_dep_slow.argument.observation           =   inputms
apply_dir_dep_slow.argument.parset                =   {{ parset_dir }}//facet_dirdep_apply_slow.parset
apply_dir_dep_slow.argument.catalog               =   {{ skymodel_dir }}/empty.skymodel
apply_dir_dep_slow.argument.parmdb                =   inputparmdb
apply_dir_dep_slow.argument.replace-sourcedb      =   True
apply_dir_dep_slow.argument.replace-parmdb        =   True

average.control.type                              =   dppp
average.control.mapfile_in                        =   shift_empty.output.mapfile
average.control.inputkey                          =   msin
average.argument.msin.datacolumn                  =   CORRECTED_DATA
average.argument.msout.overwrite                  =   True
average.argument.msout.writefullresflag           =   False
average.argument.local_scratch_dir                =   {{ local_dir }}
average.argument.steps                            =   [avg]
average.argument.avg.type                         =   squash
average.argument.avg.freqstep                     =   {{ facetimage_freqstep }}
average.argument.avg.timestep                     =   {{ facetimage_timestep }}

create_compressed_mapfile.control.kind            =   plugin
create_compressed_mapfile.control.type            =   compressMapfile
create_compressed_mapfile.control.mapfile_in      =   average.output.mapfile
create_compressed_mapfile.control.mapfile_dir     =   {{ mapfile_dir }}
create_compressed_mapfile.control.filename        =   concat_averaged_input.datamap

{% block full_image_parms %}
concat_averaged.control.type                      =   dppp
concat_averaged.control.mapfile_in                =   create_compressed_mapfile.output.mapfile
concat_averaged.control.inputkey                  =   msin
concat_averaged.argument.msin.datacolumn          =   DATA
concat_averaged.argument.msout.writefullresflag   =   False
concat_averaged.argument.local_scratch_dir        =   {{ local_dir }}
concat_averaged.argument.steps                    =   []

wsclean_image_full1.control.type                  =   wsclean
wsclean_image_full1.control.mapfile_in            =   concat_averaged.output.mapfile
wsclean_image_full1.control.inputkey              =   msfile
wsclean_image_full1.argument.flags                =   [-no-update-model-required,-joinchannels,msfile]
wsclean_image_full1.argument.size                 =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_image_full1.argument.niter                =   15000
wsclean_image_full1.argument.threshold            =   0.0
wsclean_image_full1.argument.pol                  =   I
wsclean_image_full1.argument.weight               =   briggs -0.5
wsclean_image_full1.argument.mgain                =   0.5
wsclean_image_full1.argument.cleanborder          =   0
wsclean_image_full1.argument.minuv-l              =   80
wsclean_image_full1.argument.scale                =   0.000417
wsclean_image_full1.argument.channelsout          =   {{ nchannels }}
wsclean_image_full1.argument.mem                  =   {{ max_percent_memory }}
wsclean_image_full1.argument.j                    =   {{ max_cpus_per_img }}
wsclean_image_full1.argument.tempdir              =   {{ local_dir }}

create_imagebase_map1.control.kind                =   plugin
create_imagebase_map1.control.type                =   trimMapfile
create_imagebase_map1.control.mapfile_in          =   wsclean_image_full1.output.wsclean_image_full1-image.fits.mapfile
create_imagebase_map1.control.trim                =   -
create_imagebase_map1.control.mapfile_dir         =   {{ mapfile_dir }}
create_imagebase_map1.control.filename            =   wsclean_image_full1_image_rootnames.datamap

adjust_wsclean_mapfile1.control.kind              =   plugin
adjust_wsclean_mapfile1.control.type              =   appendMapfile
adjust_wsclean_mapfile1.control.mapfile_in        =   create_imagebase_map1.output.mapfile
adjust_wsclean_mapfile1.control.append            =   {{ wsclean_suffix }}
adjust_wsclean_mapfile1.control.mapfile_dir       =   {{ mapfile_dir }}
adjust_wsclean_mapfile1.control.filename          =   image1.datamap

copy_beam_info.control.type                       =   copy_beam_info
copy_beam_info.control.mapfile_in                 =   adjust_wsclean_mapfile1.output.mapfile
copy_beam_info.control.inputkey                   =   imagefile
copy_beam_info.argument.flags                     =   [imagefile]

mask.control.type                                 =   make_clean_mask
mask.control.mapfile_in                           =   adjust_wsclean_mapfile1.output.mapfile
mask.control.inputkey                             =   imagefile
mask.control.outputkey                            =   maskfile
mask.argument.flags                               =   [imagefile,maskfile]
mask.argument.threshisl                           =   5
mask.argument.threshpix                           =   5
mask.argument.rmsbox                              =   (80,20)
mask.argument.adaptive_rmsbox                     =   True
mask.argument.img_format                          =   fits
mask.argument.vertices_file                       =   {{ vertices_file }}

wsclean_image_full2.control.type                  =   wsclean
wsclean_image_full2.control.mapfiles_in           =   [concat_averaged.output.mapfile,mask.output.mapfile,mask.output.threshold_5sig.mapfile]
wsclean_image_full2.control.inputkeys             =   [msfile,fitsmask,threshold]
wsclean_image_full2.argument.flags                =   [-no-update-model-required,-joinchannels,msfile]
wsclean_image_full2.argument.fitsmask             =   fitsmask
wsclean_image_full2.argument.size                 =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_image_full2.argument.niter                =   1000000
wsclean_image_full2.argument.threshold            =   threshold
wsclean_image_full2.argument.pol                  =   I
wsclean_image_full2.argument.weight               =   briggs -0.5
wsclean_image_full2.argument.mgain                =   0.6
wsclean_image_full2.argument.cleanborder          =   0
wsclean_image_full2.argument.minuv-l              =   80
wsclean_image_full2.argument.scale                =   0.000417
wsclean_image_full2.argument.channelsout          =   {{ nchannels }}
wsclean_image_full2.argument.mem                  =   {{ max_percent_memory }}
wsclean_image_full2.argument.j                    =   {{ max_cpus_per_img }}
wsclean_image_full2.argument.tempdir              =   {{ local_dir }}

create_imagebase_map2.control.kind                =   plugin
create_imagebase_map2.control.type                =   trimMapfile
create_imagebase_map2.control.mapfile_in          =   wsclean_image_full2.output.wsclean_image_full2-image.fits.mapfile
create_imagebase_map2.control.trim                =   -
create_imagebase_map2.control.mapfile_dir         =   {{ mapfile_dir }}
create_imagebase_map2.control.filename            =   wsclean_image_full2_image_rootnames.datamap

adjust_wsclean_mapfile2.control.kind              =   plugin
adjust_wsclean_mapfile2.control.type              =   appendMapfile
adjust_wsclean_mapfile2.control.mapfile_in        =   create_imagebase_map2.output.mapfile
adjust_wsclean_mapfile2.control.append            =   {{ wsclean_suffix }}
adjust_wsclean_mapfile2.control.mapfile_dir       =   {{ mapfile_dir }}
adjust_wsclean_mapfile2.control.filename          =   final_image.datamap
{% endblock full_image_parms %}
