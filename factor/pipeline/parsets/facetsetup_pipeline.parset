pipeline.steps = [copy_parmdb, apply_dir_indep, average1, average2, create_compressed_mapfile1, create_compressed_mapfile2, concat1, concat2, copy_column, copy_concat_map]

pipeline.pluginpath                            =   {{ pipeline_dir }}/plugins

copy_parmdb.control.kind                       =   plugin
copy_parmdb.control.type                       =   copyParmdbtoMS
copy_parmdb.control.ms_mapfile                 =   {{ shifted_cal_bands_datamap }}
copy_parmdb.control.parmdb_mapfile             =   {{ dir_indep_parmdbs_datamap }}

apply_dir_indep.control.type                   =   calibrate-stand-alone
apply_dir_indep.control.mapfile_in             =   {{ shifted_cal_bands_datamap }}
apply_dir_indep.control.inputkey               =   inputms
apply_dir_indep.control.arguments              =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirindep_apply_cal.parset,{{ skymodel_dir }}/empty.skymodel]

average1.control.type                          =   dppp
average1.control.opts.mapfile_in               =   {{ shifted_cal_bands_datamap }}
average1.control.opts.inputkey                 =   msin
average1.parsetarg.msin.datacolumn             =   DATA
average1.parsetarg.msout.writefullresflag      =   False
average1.parsetarg.steps                       =   [avg]
average1.parsetarg.avg.type                    =   squash
average1.parsetarg.avg.freqstep                =   20
average1.parsetarg.avg.timestep                =   1

average2.control.type                          =   dppp
average2.control.opts.mapfile_in               =   {{ shifted_cal_bands_datamap }}
average2.control.opts.inputkey                 =   msin
average2.parsetarg.msin.datacolumn             =   CORRECTED_DATA
average2.parsetarg.msout.writefullresflag      =   False
average2.parsetarg.steps                       =   [avg]
average2.parsetarg.avg.type                    =   squash
average2.parsetarg.avg.freqstep                =   20
average2.parsetarg.avg.timestep                =   1

create_compressed_mapfile1.control.kind        =   plugin
create_compressed_mapfile1.control.type        =   compressMapfile
create_compressed_mapfile1.control.mapfile_in  =   average1.output.mapfile
create_compressed_mapfile1.control.mapfile_dir =   {{ mapfile_dir }}
create_compressed_mapfile1.control.filename    =   concat1_input.mapfile

create_compressed_mapfile2.control.kind        =   plugin
create_compressed_mapfile2.control.type        =   compressMapfile
create_compressed_mapfile2.control.mapfile_in  =   average2.output.mapfile
create_compressed_mapfile2.control.mapfile_dir =   {{ mapfile_dir }}
create_compressed_mapfile2.control.filename    =   concat2_input.mapfile

concat1.control.type                           =   dppp
concat1.control.opts.mapfile_in                =   create_compressed_mapfile1.output.mapfile
concat1.control.opts.inputkey                  =   msin
concat1.parsetarg.msin.datacolumn              =   DATA
concat1.parsetarg.msout.writefullresflag       =   False
concat1.parsetarg.steps                        =   []

concat2.control.type                           =   dppp
concat2.control.opts.mapfile_in                =   create_compressed_mapfile2.output.mapfile
concat2.control.opts.inputkey                  =   msin
concat2.parsetarg.msin.datacolumn              =   DATA
concat2.parsetarg.msout.writefullresflag       =   False
concat2.parsetarg.steps                        =   []

copy_column.control.type                       =   copy_column
copy_column.argument.flags                     =   [concat1.output.mapfile,concat2.output.mapfile]
copy_column.argument.column_from               =   DATA
copy_column.argument.column_to                 =   CORRECTED_DATA

copy_concat_map.control.kind                   =   plugin
copy_concat_map.control.type                   =   copyMapfile
copy_concat_map.control.mapfile                =   concat1.output.mapfile
copy_concat_map.control.mapfile_dir            =   {{ mapfile_dir }}
copy_concat_map.control.filename               =   shifted_cal_concat.datamap
