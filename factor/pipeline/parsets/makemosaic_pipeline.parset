pipeline.steps = [update_mapfile_hosts, create_images_map, create_vertices_map, create_compressed_mapfile_images, create_compressed_mapfile_vertices, copy_beam_info, make_mosaic, create_ms_map, average, create_compressed_mapfile, concat, make_pbimage, zero_avgpb, image2fits, correct_mosaic]

pipeline.pluginpath                                    =   {{ pipeline_dir }}/plugins

update_mapfile_hosts.control.kind                      =   plugin
update_mapfile_hosts.control.type                      =   updateHosts
update_mapfile_hosts.control.mapfile_dir               =   input.output.mapfile_dir
update_mapfile_hosts.control.hosts                     =   {{ hosts }}

create_images_map.control.kind                         =   plugin
create_images_map.control.type                         =   addListMapfile
create_images_map.control.hosts                        =   {{ hosts }}
create_images_map.control.files                        =   {{ facet_image_filenames }}
create_images_map.control.mapfile_dir                  =   input.output.mapfile_dir
create_images_map.control.filename                     =   facet_images.mapfile

create_vertices_map.control.kind                       =   plugin
create_vertices_map.control.type                       =   addListMapfile
create_vertices_map.control.hosts                      =   {{ hosts }}
create_vertices_map.control.files                      =   {{ facet_vertices_filenames }}
create_vertices_map.control.mapfile_dir                =   input.output.mapfile_dir
create_vertices_map.control.filename                   =   facet_vertices.mapfile

create_compressed_mapfile_images.control.kind          =   plugin
create_compressed_mapfile_images.control.type          =   compressMapfile
create_compressed_mapfile_images.control.mapfile_in    =   create_images_map.output.mapfile
create_compressed_mapfile_images.control.mapfile_dir   =   input.output.mapfile_dir
create_compressed_mapfile_images.control.filename      =   mosaic_images_input.mapfile

create_compressed_mapfile_vertices.control.kind        =   plugin
create_compressed_mapfile_vertices.control.type        =   compressMapfile
create_compressed_mapfile_vertices.control.mapfile_in  =   create_vertices_map.output.mapfile
create_compressed_mapfile_vertices.control.mapfile_dir =   input.output.mapfile_dir
create_compressed_mapfile_vertices.control.filename    =   mosaic_vertices_input.mapfile

copy_beam_info.control.type                            =   copy_beam_info
copy_beam_info.control.mapfile_in                      =   create_images_map.output.mapfile
copy_beam_info.control.inputkey                        =   imagefile
copy_beam_info.argument.flags                          =   [imagefile]

make_mosaic.control.type                               =   mosaic_images
make_mosaic.control.mapfiles_in                        =   [create_compressed_mapfile_images.output.mapfile,create_compressed_mapfile_vertices.output.mapfile]
make_mosaic.control.inputkeys                          =   [images,vertices]
make_mosaic.control.outputkey                          =   outfile
make_mosaic.argument.flags                             =   [images,vertices,outfile]

create_ms_map.control.kind                             =   plugin
create_ms_map.control.type                             =   addListMapfile
create_ms_map.control.hosts                            =   {{ hosts }}
create_ms_map.control.files                            =   {{ input_bands }}
create_ms_map.control.mapfile_dir                      =   input.output.mapfile_dir
create_ms_map.control.filename                         =   input_bands.mapfile

average.control.type                                   =   dppp
average.control.mapfile_in                             =   create_ms_map.output.mapfile
average.control.inputkey                               =   msin
average.argument.numthreads                            =   {{ max_cpus_per_band }}
average.argument.msin.datacolumn                       =   CORRECTED_DATA
average.argument.msout.overwrite                       =   True
average.argument.msout.writefullresflag                =   False
average.argument.local_scratch_dir                     =   {{ local_dir }}
average.argument.steps                                 =   [avg]
average.argument.avg.type                              =   squash
average.argument.avg.freqstep                          =   {{ facetselfcal_freqstep }}
average.argument.avg.timestep                          =   {{ facetselfcal_timestep }}

create_compressed_mapfile.control.kind                 =   plugin
create_compressed_mapfile.control.type                 =   compressMapfile
create_compressed_mapfile.control.mapfile_in           =   average.output.mapfile
create_compressed_mapfile.control.mapfile_dir          =   input.output.mapfile_dir
create_compressed_mapfile.control.filename             =   concat_input.mapfile

# concat.control.type                                    =   virtual_concat
# concat.control.mapfile_in                              =   create_compressed_mapfile.output.mapfile
# concat.control.inputkey                                =   msfiles
# concat.control.outputkey                               =   msconcat
# concat.argument.flags                                  =   [msfiles,msconcat]

concat.control.type                                    =   dppp
concat.control.mapfile_in                              =   create_compressed_mapfile.output.mapfile
concat.control.inputkey                                =   msin
concat.argument.numthreads                             =   {{ max_cpus_per_node }}
concat.argument.msin.datacolumn                        =   DATA
concat.argument.msin.missingdata                       =   True
concat.argument.msin.orderms                           =   False
concat.argument.msout.overwrite                        =   True
concat.argument.msout.writefullresflag                 =   False
concat.argument.local_scratch_dir                      =   {{ local_dir }}
concat.argument.steps                                  =   []

make_pbimage.control.type                              =   awimager
make_pbimage.control.opts.mapfile_in                   =   concat.output.mapfile
make_pbimage.control.opts.inputkey                     =   ms
make_pbimage.control.opts.outputkey                    =   image
make_pbimage.argument.numthreads                       =   {{ max_cpus_per_node }}
make_pbimage.argument.data                             =   CORRECTED_DATA
make_pbimage.argument.weight                           =   briggs
make_pbimage.argument.npix                             =   4096
make_pbimage.argument.cellsize                         =   5.5arcsec
make_pbimage.argument.padding                          =   1.
make_pbimage.argument.gain                             =   0.1
make_pbimage.argument.stokes                           =   I
make_pbimage.argument.operation                        =   mfclark
make_pbimage.argument.oversample                       =   5
make_pbimage.argument.timewindow                       =   300
make_pbimage.argument.ApplyElement                     =   0
make_pbimage.argument.FindNWplanes                     =   True
make_pbimage.argument.threshold                        =   1.0mJy
make_pbimage.argument.PBCut                            =   1e-2
make_pbimage.argument.wmax                             =   20000
make_pbimage.argument.UVmin                            =   0.08
make_pbimage.argument.UVmax                            =   10
make_pbimage.argument.SpheSupport                      =   15
make_pbimage.argument.robust                           =   -0.25
make_pbimage.argument.niter                            =   1

zero_avgpb.control.type                                =   zero_avgpb
zero_avgpb.control.mapfile_in                          =   make_pbimage.output.make_pbimage0.avgpb.mapfile
zero_avgpb.control.inputkey                            =   avgpb
zero_avgpb.control.outputkey                           =   outfile
zero_avgpb.argument.flags                              =   [avgpb,outfile]

image2fits.control.type                                =   image2fits
image2fits.control.outputkey                           =   out
image2fits.argument.in                                 =   zero_avgpb.output.mapfile

correct_mosaic.control.type                            =   pb_correct
correct_mosaic.control.mapfiles_in                     =   [make_mosaic.output.mapfile,image2fits.output.mapfile]
correct_mosaic.control.inputkeys                       =   [mosaic,avgpbz]
correct_mosaic.control.outputkey                       =   outroot
correct_mosaic.argument.flags                          =   [mosaic,avgpbz,outroot]
