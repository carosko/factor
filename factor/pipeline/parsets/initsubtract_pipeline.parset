pipeline.steps = [update_mapfile_hosts, create_ms_map, create_parmdb_map, create_high_sizes_map, create_low_sizes_map, wsclean_high1, mask_high, wsclean_high2, fits_to_image_high, casa_to_bbs_high, subtract_high, average, wsclean_low1, mask_low, wsclean_low2, fits_to_image_low, casa_to_bbs_low, create_model_low_map, wsclean_ft_low, subtract_low, merge, copy_final_model_map]

pipeline.pluginpath                        =   {{ pipeline_dir }}/plugins

# update the hosts entry in all mapfiles in "input.output.mapfile_dir"
update_mapfile_hosts.control.kind          =   plugin
update_mapfile_hosts.control.type          =   updateHosts
update_mapfile_hosts.control.mapfile_dir   =   input.output.mapfile_dir
update_mapfile_hosts.control.hosts         =   {{ hosts }}

# create a mapfile with all single MSs
create_ms_map.control.kind                 =   plugin
create_ms_map.control.type                 =   addListMapfile
create_ms_map.control.hosts                =   {{ hosts }}
create_ms_map.control.files                =   {{ input_files_single }}
create_ms_map.control.mapfile_dir          =   {{ mapfile_dir }}
create_ms_map.control.filename             =   input_files_single.datamap

# create a mapfile with the direction independent parmDBs (same length as create_ms_map)
create_parmdb_map.control.kind             =   plugin
create_parmdb_map.control.type             =   addListMapfile
create_parmdb_map.control.hosts            =   {{ hosts }}
create_parmdb_map.control.files            =   {{ dir_indep_parmdbs }}
create_parmdb_map.control.mapfile_dir      =   {{ mapfile_dir }}
create_parmdb_map.control.filename         =   dir_indep_instrument_parmdbs.datamap

# create a multi-mapfile with the groups of MSs
create_msmulti_map.control.kind            =   plugin
create_msmulti_map.control.type            =   addListMultiMapfile
create_msmulti_map.control.hosts           =   {{ hosts }}
create_msmulti_map.control.files           =   {{ input_files_grouped }}
create_msmulti_map.control.mapfile_dir     =   {{ mapfile_dir }}
create_msmulti_map.control.filename        =   input_files_grouped.datamap

create_high_sizes_map.control.kind         =   plugin
create_high_sizes_map.control.type         =   addListMapfile
create_high_sizes_map.control.hosts        =   {{ hosts }}
create_high_sizes_map.control.files        =   {{ highres_image_sizes }}
create_high_sizes_map.control.mapfile_dir  =   {{ mapfile_dir }}
create_high_sizes_map.control.filename     =   highres_image_sizes.datamap

create_low_sizes_map.control.kind          =   plugin
create_low_sizes_map.control.type          =   addListMapfile
create_low_sizes_map.control.hosts         =   {{ hosts }}
create_low_sizes_map.control.files         =   {{ lowres_image_sizes }}
create_low_sizes_map.control.mapfile_dir   =   {{ mapfile_dir }}
create_low_sizes_map.control.filename      =   lowres_image_sizes.datamap

# Make sure that MSs have "MODEL_DATA" column before virtual concatenation
add_imaging_columns.control.type           =   add_imaging_columns
add_imaging_columns.control.mapfile_in     =   create_ms_map.output.mapfile
add_imaging_columns.control.inputkey       =   msfiles
add_imaging_columns..argument.flags        =   [msfiles]

# Do the virtual concatenation for high-res imaging
concat_high.control.type                  =   virtual_concat
concat_high.control.mapfile_in            =   create_msmulti_map.output.mapfile
concat_high.control.inputkey              =   msfiles
concat_high.control.outputkey             =   msconcat
concat_high.argument.flags                =   [msfiles,msconcat]

# Image the virtually concatenated MSs
wsclean_high1.control.type                 =   wsclean
wsclean_high1.control.mapfiles_in          =   [concat_high.output.mapfile,create_high_sizes_map.output.mapfile]
wsclean_high1.control.inputkeys            =   [msfile,imsize]
wsclean_high1.argument.flags               =   [-no-update-model-required,msfile]
wsclean_high1.argument.size                =   imsize
wsclean_high1.argument.niter               =   40000
wsclean_high1.argument.threshold           =   0.0
wsclean_high1.argument.pol                 =   I
wsclean_high1.argument.weight              =   briggs 0.0
wsclean_high1.argument.mgain               =   0.65
wsclean_high1.argument.minuv-l             =   80
wsclean_high1.argument.maxuv-l             =   7000
wsclean_high1.argument.scale               =   0.00208
wsclean_high1.argument.mem                 =   {{ max_percent_memory }}
wsclean_high1.argument.j                   =   {{ max_cpus_per_img }}
wsclean_high1.argument.tempdir             =   {{ local_dir }}

mask_high.control.type                     =   make_clean_mask
mask_high.control.mapfile_in               =   wsclean_high1.output.wsclean_high1-image.fits.mapfile
mask_high.control.inputkey                 =   imagefile
mask_high.control.outputkey                =   maskfile
mask_high.argument.flags                   =   [imagefile,maskfile]
mask_high.argument.threshisl               =   3.0
mask_high.argument.threshpix               =   5.0
mask_high.argument.atrous_do               =   True
mask_high.argument.rmsbox                  =   (60,20)
mask_high.argument.adaptive_rmsbox         =   True
mask_high.argument.img_format              =   fits
mask_high.argument.atrous_jmax             =   3

wsclean_high2.control.type                 =   wsclean
wsclean_high2.control.mapfiles_in          =   [concat_high.output.mapfile,mask_high.output.mapfile,create_high_sizes_map.output.mapfile]
wsclean_high2.control.inputkeys            =   [msfile,fitsmask,imsize]
wsclean_high2.argument.flags               =   [-update-model-required,msfile]
wsclean_high2.argument.fitsmask            =   fitsmask
wsclean_high2.argument.size                =   imsize
wsclean_high2.argument.niter               =   40000
wsclean_high2.argument.threshold           =   mask_high.output.threshold_5sig.mapfile
wsclean_high2.argument.pol                 =   I
wsclean_high2.argument.weight              =   briggs 0.0
wsclean_high2.argument.mgain               =   0.65
wsclean_high2.argument.minuv-l             =   80
wsclean_high2.argument.maxuv-l             =   7000
wsclean_high2.argument.scale               =   0.00208
wsclean_high2.argument.mem                 =   {{ max_percent_memory }}
wsclean_high2.argument.j                   =   {{ max_cpus_per_img }}
wsclean_high2.argument.tempdir             =   {{ local_dir }}

fits_to_image_high.control.type            =   convert_fits_image_to_casa
fits_to_image_high.control.mapfile_in      =   wsclean_high2.output.wsclean_high2-model.fits.mapfile
fits_to_image_high.control.inputkey        =   fitsfile
fits_to_image_high.control.outputkey       =   imagefile
fits_to_image_high.argument.flags          =   [fitsfile,imagefile]
fits_to_image_high.argument.force_stokes_i =   True

casa_to_bbs_high.control.type              =   casapy2bbs
casa_to_bbs_high.control.mapfile_in        =   fits_to_image_high.output.mapfile
casa_to_bbs_high.control.inputkey          =   inputmodel
casa_to_bbs_high.control.outputkey         =   outfile
casa_to_bbs_high.control.arguments         =   [-n,inputmodel,outfile]

# do the subtract with the "MODEL_DATA" column
# I hope the MODEL_DATA column gets written to the single MSs, not the virtually concatenated one.
subtract_high.control.type                 =   calibrate-stand-alone_new
subtract_high.argument.observation         =   create_ms_map.output.mapfile
subtract_high.argument.parset              =   {{ parset_dir }}/field_subtract_highres.parset
subtract_high.argument.catalog             =   {{ skymodel_dir }}/empty.skymodel
subtract_high.argument.parmdb              =   create_parmdb_map.output.mapfile
subtract_high.argument.replace-sourcedb    =   True
subtract_high.argument.replace-parmdb      =   True
subtract_high.argument.no-columns          =   True

average.control.type                       =   dppp
average.control.mapfile_in                 =   create_ms_map.output.mapfile
average.control.inputkey                   =   msin
average.argument.msin.datacolumn           =   CORRECTED_SUBTRACTED_DATA
average.argument.msout.overwrite           =   True
average.argument.msout.writefullresflag    =   False
average.argument.local_scratch_dir         =   {{ local_dir }}
average.argument.steps                     =   [avg]
average.argument.avg.type                  =   squash
average.argument.avg.freqstep              =   {{ initsubtract_freqstep }}
average.argument.avg.timestep              =   {{ initsubtract_timestep }}

regroup_map.control.kind                   =   plugin
regroup_map.control.type                   =   reGroupMapfile
regroup_map.control.mapfile_in             =   average.output.mapfile
regroup_map.control.mapfile_groups         =   create_msmulti_map.output.mapfile
regroup_map.control.mapfile_dir            =   {{ mapfile_dir }}
regroup_map.control.filename               =   re_grouped.datamap

# Do the virtual concatenation for low-res imaging
concat_low.control.type                    =   virtual_concat
concat_low.control.mapfile_in              =   regroup_map.output.mapfile
concat_low.control.inputkey                =   msfiles
concat_low.control.outputkey               =   msconcat
concat_low.argument.flags                  =   [msfiles,msconcat]

wsclean_low1.control.type                  =   wsclean
wsclean_low1.control.mapfiles_in           =   [concat_low.output.mapfile,create_low_sizes_map.output.mapfile]
wsclean_low1.control.inputkeys             =   [msfile,imsize]
wsclean_low1.argument.flags                =   [-no-update-model-required,msfile]
wsclean_low1.argument.size                 =   imsize
wsclean_low1.argument.niter                =   20000
wsclean_low1.argument.threshold            =   0.0
wsclean_low1.argument.pol                  =   I
wsclean_low1.argument.weight               =   briggs 0.0
wsclean_low1.argument.mgain                =   0.65
wsclean_low1.argument.minuv-l              =   80
wsclean_low1.argument.maxuv-l              =   2000
wsclean_low1.argument.scale                =   0.00694
wsclean_low1.argument.mem                  =   {{ max_percent_memory }}
wsclean_low1.argument.j                    =   {{ max_cpus_per_img }}
wsclean_low1.argument.tempdir              =   {{ local_dir }}

mask_low.control.type                      =   make_clean_mask
mask_low.control.mapfile_in                =   wsclean_low1.output.wsclean_low1-image.fits.mapfile
mask_low.control.inputkey                  =   imagefile
mask_low.control.outputkey                 =   maskfile
mask_low.argument.flags                    =   [imagefile,maskfile]
mask_low.argument.threshisl                =   4
mask_low.argument.threshpix                =   5
mask_low.argument.rmsbox                   =   (60,20)
mask_low.argument.adaptive_rmsbox          =   True
mask_low.argument.img_format               =   fits
mask_low.argument.atrous_jmax              =   3

wsclean_low2.control.type                  =   wsclean
wsclean_low2.control.mapfiles_in           =   [concat_low.output.mapfile,mask_low.output.mapfile,create_low_sizes_map.output.mapfile]
wsclean_low2.control.inputkeys             =   [msfile,fitsmask,imsize]
wsclean_low2.argument.flags                =   [-no-update-model-required,msfile]
wsclean_low2.argument.fitsmask             =   fitsmask
wsclean_low2.argument.size                 =   imsize
wsclean_low2.argument.niter                =   20000
wsclean_low2.argument.threshold            =   mask_low.output.threshold_5sig.mapfile
wsclean_low2.argument.pol                  =   I
wsclean_low2.argument.weight               =   briggs 0.0
wsclean_low2.argument.mgain                =   0.65
wsclean_low2.argument.minuv-l              =   80
wsclean_low2.argument.maxuv-l              =   2000
wsclean_low2.argument.scale                =   0.00694
wsclean_low2.argument.mem                  =   {{ max_percent_memory }}
wsclean_low2.argument.j                    =   {{ max_cpus_per_img }}
wsclean_low2.argument.tempdir              =   {{ local_dir }}

fits_to_image_low.control.type             =   convert_fits_image_to_casa
fits_to_image_low.control.mapfile_in       =   wsclean_low2.output.wsclean_low2-model.fits.mapfile
fits_to_image_low.control.inputkey         =   fitsfile
fits_to_image_low.control.outputkey        =   imagefile
fits_to_image_low.argument.flags           =   [fitsfile,imagefile]
fits_to_image_low.argument.force_stokes_i  =   True

casa_to_bbs_low.control.type               =   casapy2bbs
casa_to_bbs_low.control.mapfile_in         =   fits_to_image_low.output.mapfile
casa_to_bbs_low.control.inputkey           =   inputmodel
casa_to_bbs_low.control.outputkey          =   outfile
casa_to_bbs_low.control.arguments          =   [-n,inputmodel,outfile]

create_model_low_map.control.kind          =   plugin
create_model_low_map.control.type          =   trimMapfile
create_model_low_map.control.mapfile_in    =   wsclean_low2.output.wsclean_low2-model.fits.mapfile
create_model_low_map.control.trim          =   -model.fits
create_model_low_map.control.mapfile_dir   =   {{ mapfile_dir }}
create_model_low_map.control.filename      =   model_low_rootnames.datamap

wsclean_ft_low.control.type                =   wsclean_ft
wsclean_ft_low.control.mapfiles_in         =   [create_ms_map.output.mapfile,create_model_low_map.output.mapfile,create_low_sizes_map.output.mapfile]
wsclean_ft_low.control.inputkeys           =   [msfile,name,imsize]
wsclean_ft_low.argument.flags              =   [-predict,msfile]
wsclean_ft_low.argument.name               =   create_model_low_map.output.mapfile
wsclean_ft_low.argument.size               =   imsize
wsclean_ft_low.argument.scale              =   0.00694
wsclean_ft_low.argument.mem                =   {{ max_percent_memory }}
wsclean_ft_low.argument.j                  =   {{ max_cpus_per_img }}

subtract_low.control.type                  =   calibrate-stand-alone_new
subtract_low.argument.observation          =   create_ms_map.output.mapfile
subtract_low.argument.parset               =   {{ parset_dir }}/field_subtract_lowres.parset
subtract_low.argument.catalog              =   {{ skymodel_dir }}/empty.skymodel
subtract_low.argument.parmdb               =   create_parmdb_map.output.mapfile
subtract_low.argument.force                =   True
subtract_low.argument.no-columns           =   True

merge.control.type                         =   merge_skymodels
merge.control.mapfiles_in                  =   [casa_to_bbs_low.output.mapfile,casa_to_bbs_high.output.mapfile]
merge.control.inputkeys                    =   [modellow,modelhigh]
merge.control.outputkey                    =   modelmerged
merge.argument.flags                       =   [modellow,modelhigh,modelmerged]

copy_final_model_map.control.kind          =   plugin
copy_final_model_map.control.type          =   copyMapfile
copy_final_model_map.control.mapfile_in    =   merge.output.mapfile
copy_final_model_map.control.mapfile_dir   =   {{ mapfile_dir }}
copy_final_model_map.control.filename      =   merged_skymodels.datamap

copy_avg_data_map.control.kind             =   plugin
copy_avg_data_map.control.type             =   copyMapfile
copy_avg_data_map.control.mapfile_in       =   average.output.mapfile
copy_avg_data_map.control.mapfile_dir      =   {{ mapfile_dir }}
copy_avg_data_map.control.filename         =   averaged_data.datamap
