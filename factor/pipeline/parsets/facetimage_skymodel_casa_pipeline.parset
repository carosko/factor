{% extends "facetimage_skymodel_pipeline.parset" %}
{% block full_image_steps %}concat_averaged, premask, casa_image_full1, adjust_casa_mapfile, mask, casa_image_full2, adjust_casa_mapfile2{% endblock full_image_steps %}
{% block full_image_parms %}
concat_averaged.control.type                      =   virtual_concat
concat_averaged.control.mapfile_in                =   create_compressed_mapfile.output.mapfile
concat_averaged.control.inputkey                  =   msfiles
concat_averaged.control.outputkey                 =   msconcat
concat_averaged.argument.flags                    =   [msfiles,msconcat]

premask.control.type                              =   make_clean_mask
premask.control.mapfile_in                        =   create_compressed_mapfile.output.mapfile
premask.control.inputkey                          =   imagefile
premask.control.outputkey                         =   maskfile
premask.argument.flags                            =   [None,maskfile]
premask.argument.img_format                       =   casa
premask.argument.pad_to_size                      =   {{ facet_imsize }}
premask.argument.skip_source_detection            =   True
premask.argument.vertices_file                    =   {{ vertices_file }}
premask.argument.reference_ra_deg                 =   {{ facet_ra }}
premask.argument.reference_dec_deg                =   {{ facet_dec }}

casa_image_full1.control.type                     =   casa_clean
casa_image_full1.control.mapfile_in               =   concat_averaged.output.mapfile
casa_image_full1.control.inputkey                 =   clean.vis
casa_image_full1.control.outputkey                =   clean.imagename
casa_image_full1.control.arguments                =   [--nologger,--nogui,-c]
casa_image_full1.argument.clean.wprojplanes       =   {{ facet_wplanes }}
casa_image_full1.argument.clean.uvrange           =   '>80lambda'
casa_image_full1.argument.clean.nterms            =   {{ nterms }}
casa_image_full1.argument.clean.niter             =   {{ casa_full_image_niter }}
casa_image_full1.argument.clean.threshold         =   '{{ casa_full_image_threshold_mjy }}'
casa_image_full1.argument.clean.imsize            =   [{{ facet_imsize }}, {{ facet_imsize }}]
casa_image_full1.argument.clean.cell              =   ['1.5arcsec', '1.5arcsec']
casa_image_full1.argument.clean.robust            =   -0.25
casa_image_full1.argument.clean.multiscale        =   {{ casa_multiscale }}
casa_image_full1.argument.clean.selectdata        =   True
casa_image_full1.argument.clean.gridmode          =   'widefield'
casa_image_full1.argument.clean.interactive       =   False
casa_image_full1.argument.clean.mode              =   'mfs'
casa_image_full1.argument.clean.gain              =   0.1
casa_image_full1.argument.clean.psfmode           =   'clark'
casa_image_full1.argument.clean.imagermode        =   'csclean'
casa_image_full1.argument.clean.ftmachine         =   'mosaic'
casa_image_full1.argument.clean.mosweight         =   False
casa_image_full1.argument.clean.scaletype         =   'SAULT'
casa_image_full1.argument.clean.weighting         =   'briggs'
casa_image_full1.argument.clean.uvtaper           =   False
casa_image_full1.argument.clean.pbcor             =   False
casa_image_full1.argument.clean.minpb             =   0.2
casa_image_full1.argument.clean.npixels           =   0
casa_image_full1.argument.clean.npercycle         =   100
casa_image_full1.argument.clean.cyclefactor       =   2.5
casa_image_full1.argument.clean.cyclespeedup      =   -1
casa_image_full1.argument.clean.chaniter          =   False
casa_image_full1.argument.clean.flatnoise         =   True
casa_image_full1.argument.clean.allowchunk        =   False

adjust_casa_mapfile.control.kind                  =   plugin
adjust_casa_mapfile.control.type                  =   appendMapfile
adjust_casa_mapfile.control.mapfile_in            =   casa_image_full1.output.casa_image_full1.image.mapfile
adjust_casa_mapfile.control.append                =   {{ casa_suffix }}
adjust_casa_mapfile.control.mapfile_dir           =   input.output.mapfile_dir
adjust_casa_mapfile.control.filename              =   mask_input.mapfile

mask.control.type                                 =   make_clean_mask
mask.control.mapfile_in                           =   adjust_casa_mapfile.output.mapfile
mask.control.inputkey                             =   imagefile
mask.control.outputkey                            =   maskfile
mask.argument.flags                               =   [imagefile,maskfile]
mask.argument.threshisl                           =   5
mask.argument.threshpix                           =   5
mask.argument.rmsbox                              =   (80,20)
mask.argument.adaptive_rmsbox                     =   True
mask.argument.atrous_do                           =   True
mask.argument.img_format                          =   casa
mask.argument.vertices_file                       =   {{ vertices_file }}
mask.argument.threshold_format                    =   str_with_units

casa_image_full2.control.type                     =   casa_clean
casa_image_full2.control.mapfiles_in              =   [concat_averaged.output.mapfile,mask.output.mapfile,mask.output.threshold_5sig.mapfile]
casa_image_full2.control.inputkeys                =   [clean.vis,clean.mask,clean.threshold]
casa_image_full2.control.outputkey                =   clean.imagename
casa_image_full2.control.arguments                =   [--nologger,--nogui,-c]
casa_image_full2.argument.clean.wprojplanes       =   {{ facet_wplanes }}
casa_image_full2.argument.clean.uvrange           =   '>80lambda'
casa_image_full2.argument.clean.nterms            =   {{ nterms }}
casa_image_full2.argument.clean.niter             =   1000000
casa_image_full2.argument.clean.imsize            =   [{{ facet_imsize }}, {{ facet_imsize }}]
casa_image_full2.argument.clean.cell              =   ['1.5arcsec', '1.5arcsec']
casa_image_full2.argument.clean.robust            =   -0.25
casa_image_full2.argument.clean.multiscale        =   {{ casa_multiscale }}
casa_image_full2.argument.clean.selectdata        =   True
casa_image_full2.argument.clean.gridmode          =   'widefield'
casa_image_full2.argument.clean.interactive       =   False
casa_image_full2.argument.clean.mode              =   'mfs'
casa_image_full2.argument.clean.gain              =   0.1
casa_image_full2.argument.clean.psfmode           =   'clark'
casa_image_full2.argument.clean.imagermode        =   'csclean'
casa_image_full2.argument.clean.ftmachine         =   'mosaic'
casa_image_full2.argument.clean.mosweight         =   False
casa_image_full2.argument.clean.scaletype         =   'SAULT'
casa_image_full2.argument.clean.weighting         =   'briggs'
casa_image_full2.argument.clean.uvtaper           =   False
casa_image_full2.argument.clean.pbcor             =   False
casa_image_full2.argument.clean.minpb             =   0.2
casa_image_full2.argument.clean.npixels           =   0
casa_image_full2.argument.clean.npercycle         =   100
casa_image_full2.argument.clean.cyclefactor       =   3.0
casa_image_full2.argument.clean.cyclespeedup      =   -1
casa_image_full2.argument.clean.chaniter          =   False
casa_image_full2.argument.clean.flatnoise         =   True
casa_image_full2.argument.clean.allowchunk        =   False

adjust_casa_mapfile2.control.kind                 =   plugin
adjust_casa_mapfile2.control.type                 =   appendMapfile
adjust_casa_mapfile2.control.mapfile_in           =   casa_image_full2.output.casa_image_full2.image.mapfile
adjust_casa_mapfile2.control.append               =   {{ casa_suffix }}
adjust_casa_mapfile2.control.mapfile_dir          =   input.output.mapfile_dir
adjust_casa_mapfile2.control.filename             =   final_image.mapfile
{% endblock full_image_parms %}
