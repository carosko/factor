pipeline.steps = [copy_parmdb1, apply_dir_indep, average_data, average_corr, create_compressed_mapfile_data, create_compressed_mapfile_corr, concat_data, concat_corr, copy_column, average0, casa_image01, mask0, casa_image02, create_model0_map, casa_ft0, make_chunks, create_chunks_map, solve_phaseonly1, average1, create_compressed_mapfile1, concat1, casa_image11, mask1, casa_image12, create_model1_map, create_chunks_compressed_mapfile, concat_chunks, casa_ft1, solve_phaseonly2, average2, create_compressed_mapfile2, concat2, casa_image21, mask2, casa_image22, create_model2_map, casa_ft2, solve_ampphase11, solve_ampphase12, merge_amp_parmdbs1, copy_parmdb_amp1, import_amp1, smooth_amp1, export_amp1, copy_parmdb_smoothed_amp1, copy_parmdb_smoothed_amp1_to_chunks, apply_amp1, average3, create_compressed_mapfile3, concat3, casa_image31, mask3, casa_image32, create_model3_map, casa_ft3, solve_ampphase21, merge_phase_parmdbs, solve_ampphase22, merge_amp_parmdbs2, copy_parmdb_amp2, import_amp2, smooth_amp2, export_amp2, copy_parmdb_smoothed_amp2, copy_parmdb_smoothed_amp2_to_chunks, apply_amp2, average4, create_compressed_mapfile4, concat4, casa_image41, mask4, casa_image42, merge_selfcal_parmdbs, copy_final_model_map, copy_parmdb2, apply_dir_dep, average5, create_compressed_mapfile5, concat_averaged, wsclean1, mask, wsclean2, create_model4_map, create_compressed_mapfile6, concat_unaveraged, wsclean_ft, copy_final_image_map, copy_parmdb_dirdep, subtract, copy_parmdb_dirindep1, copy_parmdb_dirindep2, apply_dir_indep_pre, apply_dir_indep_post, average_pre, average_post, wsclean_pre1, mask_pre, wsclean_pre2, wsclean_post1, mask_post, wsclean_post2, verify_subtract, copy_verify_subtract]


pipeline.pluginpath                                        =   {{ pipeline_dir }}/plugins

copy_parmdb1.control.kind                                  =   plugin
copy_parmdb1.control.type                                  =   copyParmdbtoMS
copy_parmdb1.control.ms_mapfile                            =   {{ shifted_cal_bands_datamap }}
copy_parmdb1.control.parmdb_mapfile                        =   {{ dir_indep_parmdbs_datamap }}

apply_dir_indep.control.type                               =   calibrate-stand-alone
apply_dir_indep.control.mapfile_in                         =   {{ shifted_cal_bands_datamap }}
apply_dir_indep.control.inputkey                           =   inputms
apply_dir_indep.control.arguments                          =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirindep_apply_cal.parset,{{ skymodel_dir }}/empty.skymodel]

average_data.control.type                                  =   dppp
average_data.control.mapfile_in                            =   {{ shifted_cal_bands_datamap }}
average_data.control.inputkey                              =   msin
average_data.argument.msin.datacolumn                      =   DATA
average_data.argument.msout.writefullresflag               =   False
average_data.argument.steps                                =   [avg]
average_data.argument.avg.type                             =   squash
average_data.argument.avg.freqstep                         =   20
average_data.argument.avg.timestep                         =   1

average_corr.control.type                                  =   dppp
average_corr.control.mapfile_in                            =   {{ shifted_cal_bands_datamap }}
average_corr.control.inputkey                              =   msin
average_corr.argument.msin.datacolumn                      =   CORRECTED_DATA
average_corr.argument.msout.writefullresflag               =   False
average_corr.argument.steps                                =   [avg]
average_corr.argument.avg.type                             =   squash
average_corr.argument.avg.freqstep                         =   20
average_corr.argument.avg.timestep                         =   1

create_compressed_mapfile_data.control.kind                =   plugin
create_compressed_mapfile_data.control.type                =   compressMapfile
create_compressed_mapfile_data.control.mapfile_in          =   average_data.output.mapfile
create_compressed_mapfile_data.control.mapfile_dir         =   {{ mapfile_dir }}
create_compressed_mapfile_data.control.filename            =   concat1_input.mapfile

create_compressed_mapfile_corr.control.kind                =   plugin
create_compressed_mapfile_corr.control.type                =   compressMapfile
create_compressed_mapfile_corr.control.mapfile_in          =   average_corr.output.mapfile
create_compressed_mapfile_corr.control.mapfile_dir         =   {{ mapfile_dir }}
create_compressed_mapfile_corr.control.filename            =   concat2_input.mapfile

concat_data.control.type                                   =   dppp
concat_data.control.mapfile_in                             =   create_compressed_mapfile_data.output.mapfile
concat_data.control.inputkey                               =   msin
concat_data.argument.msin.datacolumn                       =   DATA
concat_data.argument.msout.writefullresflag                =   False
concat_data.argument.steps                                 =   []

concat_corr.control.type                                   =   dppp
concat_corr.control.mapfile_in                             =   create_compressed_mapfile_corr.output.mapfile
concat_corr.control.inputkey                               =   msin
concat_corr.argument.msin.datacolumn                       =   DATA
concat_corr.argument.msout.writefullresflag                =   False
concat_corr.argument.steps                                 =   []

copy_column.control.type                                   =   copy_column
copy_column.control.mapfiles_in                            =   [concat_corr.output.mapfile,concat_data.output.mapfile]
copy_column.control.inputkeys                              =   [corrdatafile, datafile]
copy_column.argument.flags                                 =   [corrdatafile, datafile, DATA, CORRECTED_DATA]

average0.control.type                                      =   dppp
average0.control.mapfile_in                                =   concat_data.output.mapfile
average0.control.inputkey                                  =   msin
average0.argument.msin.datacolumn                          =   CORRECTED_DATA
average0.argument.msout.writefullresflag                   =   False
average0.argument.steps                                    =   [avg]
average0.argument.avg.type                                 =   squash
average0.argument.avg.freqstep                             =   1
average0.argument.avg.timestep                             =   12

casa_image01.control.type                                  =   casa_clean
casa_image01.control.mapfile_in                            =   average0.output.mapfile
casa_image01.control.inputkey                              =   clean.vis
casa_image01.control.outputkey                             =   clean.imagename
casa_image01.control.arguments                             =   [--nologger,-c]
casa_image01.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image01.argument.clean.uvrange                        =   '>80lambda'
casa_image01.argument.clean.nterms                         =   2
casa_image01.argument.clean.niter                          =   1000
casa_image01.argument.clean.threshold                      =   '0mJy'
casa_image01.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image01.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image01.argument.clean.robust                         =   -0.25
casa_image01.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image01.argument.clean.selectdata                     =   True
casa_image01.argument.clean.gridmode                       =   'widefield'
casa_image01.argument.clean.interactive                    =   False
casa_image01.argument.clean.mode                           =   'mfs'
casa_image01.argument.clean.gain                           =   0.1
casa_image01.argument.clean.psfmode                        =   'clark'
casa_image01.argument.clean.imagermode                     =   'csclean'
casa_image01.argument.clean.ftmachine                      =   'mosaic'
casa_image01.argument.clean.mosweight                      =   False
casa_image01.argument.clean.scaletype                      =   'SAULT'
casa_image01.argument.clean.weighting                      =   'briggs'
casa_image01.argument.clean.uvtaper                        =   False
casa_image01.argument.clean.pbcor                          =   False
casa_image01.argument.clean.minpb                          =   0.2
casa_image01.argument.clean.npixels                        =   0
casa_image01.argument.clean.npercycle                      =   100
casa_image01.argument.clean.cyclefactor                    =   2.5
casa_image01.argument.clean.cyclespeedup                   =   -1
casa_image01.argument.clean.chaniter                       =   False
casa_image01.argument.clean.flatnoise                      =   True
casa_image01.argument.clean.allowchunk                     =   False

mask0.control.type                                         =   make_clean_mask
mask0.control.mapfile_in                                   =   casa_image01.output.casa_image01.image.tt0.mapfile
mask0.control.inputkey                                     =   imagefile
mask0.control.outputkey                                    =   maskfile
mask0.argument.flags                                       =   [imagefile,maskfile]
mask0.argument.threshpix                                   =   10
mask0.argument.threshisl                                   =   6
mask0.argument.atrous_do                                   =   True
mask0.argument.rmsbox                                      =   (80,20)
mask0.argument.adaptive_rmsbox                             =   True
mask0.argument.img_format                                  =   casa
mask0.argument.threshold_format                            =   str_with_units

casa_image02.control.type                                  =   casa_clean
# casa_image02.control.mapfiles_in                           =   [average0.output.mapfile,mask0.output.mapfile,mask0.output.threshold_5sig.mapfile]
# casa_image02.control.inputkeys                             =   [clean.vis,clean.mask,clean.threshold]
casa_image02.control.mapfiles_in                           =   [average0.output.mapfile,mask0.output.mapfile]
casa_image02.control.inputkeys                             =   [clean.vis,clean.mask]
casa_image02.control.outputkey                             =   clean.imagename
casa_image02.control.arguments                             =   [--nologger,-c]
casa_image02.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image02.argument.clean.uvrange                        =   '>80lambda'
casa_image02.argument.clean.nterms                         =   2
casa_image02.argument.clean.niter                          =   1000
casa_image02.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image02.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image02.argument.clean.robust                         =   -0.25
casa_image02.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image02.argument.clean.selectdata                     =   True
casa_image02.argument.clean.gridmode                       =   'widefield'
casa_image02.argument.clean.interactive                    =   False
casa_image02.argument.clean.mode                           =   'mfs'
casa_image02.argument.clean.gain                           =   0.1
casa_image02.argument.clean.psfmode                        =   'clark'
casa_image02.argument.clean.imagermode                     =   'csclean'
casa_image02.argument.clean.ftmachine                      =   'mosaic'
casa_image02.argument.clean.mosweight                      =   False
casa_image02.argument.clean.scaletype                      =   'SAULT'
casa_image02.argument.clean.weighting                      =   'briggs'
casa_image02.argument.clean.uvtaper                        =   False
casa_image02.argument.clean.pbcor                          =   False
casa_image02.argument.clean.minpb                          =   0.2
casa_image02.argument.clean.npixels                        =   0
casa_image02.argument.clean.npercycle                      =   100
casa_image02.argument.clean.cyclefactor                    =   2.5
casa_image02.argument.clean.cyclespeedup                   =   -1
casa_image02.argument.clean.chaniter                       =   False
casa_image02.argument.clean.flatnoise                      =   True
casa_image02.argument.clean.allowchunk                     =   False

create_model0_map.control.kind                             =   plugin
create_model0_map.control.type                             =   trimMapfile
create_model0_map.control.mapfile_in                       =   casa_image02.output.casa_image02.model.tt0.mapfile
create_model0_map.control.trim                             =   .model.tt0
create_model0_map.control.mapfile_dir                      =   {{ mapfile_dir }}
create_model0_map.control.filename                         =   model0_rootnames.datamap

casa_ft0.control.type                                      =   casa
casa_ft0.control.mapfiles_in                               =   [concat_data.output.mapfile,create_model0_map.output.mapfile]
casa_ft0.control.inputkeys                                 =   [inputms,modelimg]
casa_ft0.control.arguments                                 =   [--nologger,-c,{{ script_dir }}/ftw.py,inputms,modelimg,2,{{ wplanes }},{{ script_dir }}/ftw.xml,{{ script_dir }}/task_ftw.py]

make_chunks.control.type                                   =   chunk_by_time
make_chunks.control.mapfile_in                             =   concat_data.output.mapfile
make_chunks.control.inputkey                               =   msfile
make_chunks.argument.flags                                 =   [msfile, {{ chunk_width }}]

create_chunks_map.control.kind                             =   plugin
create_chunks_map.control.type                             =   addListMapfile
create_chunks_map.control.files                            =   make_chunks.output.files.mapfile
create_chunks_map.control.hosts                            =   {{ hosts }}
create_chunks_map.control.mapfile_dir                      =   {{ mapfile_dir }}
create_chunks_map.control.filename                         =   chunk_files.datamap

solve_phaseonly1.control.type                              =   calibrate-stand-alone
solve_phaseonly1.control.mapfile_in                        =   create_chunks_map.output.mapfile
solve_phaseonly1.control.inputkey                          =   inputms
solve_phaseonly1.control.arguments                         =   [-f,inputms,{{ skymodel_dir }}/empty.skymodel]
solve_phaseonly1.control.args_format                       =   bbs2
solve_phaseonly1.control.parset                            =   {{ parset_dir }}/facet_dirdep_phaseonly_solve.parset
solve_phaseonly1.control.parsetasfile                      =   True
solve_phaseonly1.argument.Step.solve.Solve.CellSize.Time   =   {{ solint_p }}

average1.control.type                                      =   dppp
average1.control.mapfile_in                                =   create_chunks_map.output.mapfile
average1.control.inputkey                                  =   msin
average1.argument.msin.datacolumn                          =   CORRECTED_DATA
average1.argument.msout.writefullresflag                   =   False
average1.argument.steps                                    =   [avg]
average1.argument.avg.type                                 =   squash
average1.argument.avg.freqstep                             =   1
average1.argument.avg.timestep                             =   12

create_compressed_mapfile1.control.kind                    =   plugin
create_compressed_mapfile1.control.type                    =   compressMapfile
create_compressed_mapfile1.control.mapfile_in              =   average1.output.mapfile
create_compressed_mapfile1.control.mapfile_dir             =   {{ mapfile_dir }}
create_compressed_mapfile1.control.filename                =   concat1_input.mapfile

concat1.control.type                                       =   virtual_concat
concat1.control.mapfile_in                                 =   create_compressed_mapfile1.output.mapfile
concat1.control.inputkey                                   =   msfiles
concat1.control.outputkey                                  =   msconcat
concat1.argument.flags                                     =   [msfiles,msconcat]

casa_image11.control.type                                  =   casa_clean
casa_image11.control.mapfile_in                            =   concat1.output.mapfile
casa_image11.control.inputkey                              =   clean.vis
casa_image11.control.outputkey                             =   clean.imagename
casa_image11.control.arguments                             =   [--nologger,-c]
casa_image11.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image11.argument.clean.uvrange                        =   '>80lambda'
casa_image11.argument.clean.nterms                         =   2
casa_image11.argument.clean.niter                          =   1000
casa_image11.argument.clean.threshold                      =   '0mJy'
casa_image11.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image11.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image11.argument.clean.robust                         =   -0.25
casa_image11.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image11.argument.clean.selectdata                     =   True
casa_image11.argument.clean.gridmode                       =   'widefield'
casa_image11.argument.clean.interactive                    =   False
casa_image11.argument.clean.mode                           =   'mfs'
casa_image11.argument.clean.gain                           =   0.1
casa_image11.argument.clean.psfmode                        =   'clark'
casa_image11.argument.clean.imagermode                     =   'csclean'
casa_image11.argument.clean.ftmachine                      =   'mosaic'
casa_image11.argument.clean.mosweight                      =   False
casa_image11.argument.clean.scaletype                      =   'SAULT'
casa_image11.argument.clean.weighting                      =   'briggs'
casa_image11.argument.clean.uvtaper                        =   False
casa_image11.argument.clean.pbcor                          =   False
casa_image11.argument.clean.minpb                          =   0.2
casa_image11.argument.clean.npixels                        =   0
casa_image11.argument.clean.npercycle                      =   100
casa_image11.argument.clean.cyclefactor                    =   2.5
casa_image11.argument.clean.cyclespeedup                   =   -1
casa_image11.argument.clean.chaniter                       =   False
casa_image11.argument.clean.flatnoise                      =   True
casa_image11.argument.clean.allowchunk                     =   False

mask1.control.type                                         =   make_clean_mask
mask1.control.mapfile_in                                   =   casa_image11.output.casa_image11.image.tt0.mapfile
mask1.control.inputkey                                     =   imagefile
mask1.control.outputkey                                    =   maskfile
mask1.argument.flags                                       =   [imagefile,maskfile]
mask1.argument.threshpix                                   =   15
mask1.argument.threshisl                                   =   15
mask1.argument.atrous_do                                   =   True
mask1.argument.rmsbox                                      =   (80,20)
mask1.argument.img_format                                  =   casa
mask1.argument.threshold_format                            =   str_with_units

casa_image12.control.type                                  =   casa_clean
# casa_image12.control.mapfiles_in                           =   [concat1.output.mapfile,mask1.output.mapfile,mask1.output.threshold_5sig.mapfile]
# casa_image12.control.inputkeys                             =   [clean.vis,clean.mask,clean.threshold]
casa_image12.control.mapfiles_in                           =   [concat1.output.mapfile,mask1.output.mapfile]
casa_image12.control.inputkeys                             =   [clean.vis,clean.mask]
casa_image12.control.outputkey                             =   clean.imagename
casa_image12.control.arguments                             =   [--nologger,-c]
casa_image12.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image12.argument.clean.uvrange                        =   '>80lambda'
casa_image12.argument.clean.nterms                         =   2
casa_image12.argument.clean.niter                          =   1000
casa_image12.argument.clean.threshold                      =   '0mJy'
casa_image12.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image12.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image12.argument.clean.robust                         =   -0.25
casa_image12.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image12.argument.clean.selectdata                     =   True
casa_image12.argument.clean.gridmode                       =   'widefield'
casa_image12.argument.clean.interactive                    =   False
casa_image12.argument.clean.mode                           =   'mfs'
casa_image12.argument.clean.gain                           =   0.1
casa_image12.argument.clean.psfmode                        =   'clark'
casa_image12.argument.clean.imagermode                     =   'csclean'
casa_image12.argument.clean.ftmachine                      =   'mosaic'
casa_image12.argument.clean.mosweight                      =   False
casa_image12.argument.clean.scaletype                      =   'SAULT'
casa_image12.argument.clean.weighting                      =   'briggs'
casa_image12.argument.clean.uvtaper                        =   False
casa_image12.argument.clean.pbcor                          =   False
casa_image12.argument.clean.minpb                          =   0.2
casa_image12.argument.clean.npixels                        =   0
casa_image12.argument.clean.npercycle                      =   100
casa_image12.argument.clean.cyclefactor                    =   2.5
casa_image12.argument.clean.cyclespeedup                   =   -1
casa_image12.argument.clean.chaniter                       =   False
casa_image12.argument.clean.flatnoise                      =   True
casa_image12.argument.clean.allowchunk                     =   False

create_model1_map.control.kind                             =   plugin
create_model1_map.control.type                             =   trimMapfile
create_model1_map.control.mapfile_in                       =   casa_image12.output.casa_image12.model.tt0.mapfile
create_model1_map.control.trim                             =   .model.tt0
create_model1_map.control.mapfile_dir                      =   {{ mapfile_dir }}
create_model1_map.control.filename                         =   model1_rootnames.datamap

create_chunks_compressed_mapfile.control.kind              =   plugin
create_chunks_compressed_mapfile.control.type              =   compressMapfile
create_chunks_compressed_mapfile.control.mapfile_in        =   create_chunks_map.output.mapfile
create_chunks_compressed_mapfile.control.mapfile_dir       =   {{ mapfile_dir }}
create_chunks_compressed_mapfile.control.filename          =   chunks_compressed.mapfile

concat_chunks.control.type                                 =   virtual_concat
concat_chunks.control.mapfile_in                           =   create_chunks_compressed_mapfile.output.mapfile
concat_chunks.control.inputkey                             =   msfiles
concat_chunks.control.outputkey                            =   msconcat
concat_chunks.argument.flags                               =   [msfiles,msconcat]

casa_ft1.control.type                                      =   casa
casa_ft1.control.mapfiles_in                               =   [concat_chunks.output.mapfile,create_model1_map.output.mapfile]
casa_ft1.control.inputkeys                                 =   [inputms,modelimg]
casa_ft1.control.arguments                                 =   [--nologger,-c,{{ script_dir }}/ftw.py,inputms,modelimg,2,{{ wplanes }},{{ script_dir }}/ftw.xml,{{ script_dir }}/task_ftw.py]

solve_phaseonly2.control.type                              =   calibrate-stand-alone
solve_phaseonly2.control.mapfile_in                        =   create_chunks_map.output.mapfile
solve_phaseonly2.control.inputkey                          =   inputms
solve_phaseonly2.control.arguments                         =   [-f,inputms,{{ skymodel_dir }}/empty.skymodel]
solve_phaseonly2.control.args_format                       =   bbs2
solve_phaseonly2.control.parset                            =   {{ parset_dir }}/facet_dirdep_phaseonly_solve.parset
solve_phaseonly2.control.parsetasfile                      =   True
solve_phaseonly2.argument.Step.solve.Solve.CellSize.Time   =   {{ solint_p }}

average2.control.type                                      =   dppp
average2.control.mapfile_in                                =   create_chunks_map.output.mapfile
average2.control.inputkey                                  =   msin
average2.argument.msin.datacolumn                          =   CORRECTED_DATA
average2.argument.msout.writefullresflag                   =   False
average2.argument.steps                                    =   [avg]
average2.argument.avg.type                                 =   squash
average2.argument.avg.freqstep                             =   1
average2.argument.avg.timestep                             =   12

create_compressed_mapfile2.control.kind                    =   plugin
create_compressed_mapfile2.control.type                    =   compressMapfile
create_compressed_mapfile2.control.mapfile_in              =   average2.output.mapfile
create_compressed_mapfile2.control.mapfile_dir             =   {{ mapfile_dir }}
create_compressed_mapfile2.control.filename                =   concat2_input.mapfile

concat2.control.type                                       =   virtual_concat
concat2.control.mapfile_in                                 =   create_compressed_mapfile2.output.mapfile
concat2.control.inputkey                                   =   msfiles
concat2.control.outputkey                                  =   msconcat
concat2.argument.flags                                     =   [msfiles,msconcat]

casa_image21.control.type                                  =   casa_clean
casa_image21.control.mapfile_in                            =   concat2.output.mapfile
casa_image21.control.inputkey                              =   clean.vis
casa_image21.control.outputkey                             =   clean.imagename
casa_image21.control.arguments                             =   [--nologger,-c]
casa_image21.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image21.argument.clean.uvrange                        =   '>80lambda'
casa_image21.argument.clean.nterms                         =   2
casa_image21.argument.clean.niter                          =   1000
casa_image21.argument.clean.threshold                      =   '0mJy'
casa_image21.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image21.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image21.argument.clean.robust                         =   -0.25
casa_image21.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image21.argument.clean.selectdata                     =   True
casa_image21.argument.clean.gridmode                       =   'widefield'
casa_image21.argument.clean.interactive                    =   False
casa_image21.argument.clean.mode                           =   'mfs'
casa_image21.argument.clean.gain                           =   0.1
casa_image21.argument.clean.psfmode                        =   'clark'
casa_image21.argument.clean.imagermode                     =   'csclean'
casa_image21.argument.clean.ftmachine                      =   'mosaic'
casa_image21.argument.clean.mosweight                      =   False
casa_image21.argument.clean.scaletype                      =   'SAULT'
casa_image21.argument.clean.weighting                      =   'briggs'
casa_image21.argument.clean.uvtaper                        =   False
casa_image21.argument.clean.pbcor                          =   False
casa_image21.argument.clean.minpb                          =   0.2
casa_image21.argument.clean.npixels                        =   0
casa_image21.argument.clean.npercycle                      =   100
casa_image21.argument.clean.cyclefactor                    =   2.5
casa_image21.argument.clean.cyclespeedup                   =   -1
casa_image21.argument.clean.chaniter                       =   False
casa_image21.argument.clean.flatnoise                      =   True
casa_image21.argument.clean.allowchunk                     =   False

mask2.control.type                                         =   make_clean_mask
mask2.control.mapfile_in                                   =   casa_image21.output.casa_image21.image.tt0.mapfile
mask2.control.inputkey                                     =   imagefile
mask2.control.outputkey                                    =   maskfile
mask2.argument.flags                                       =   [imagefile,maskfile]
mask1.argument.threshpix                                   =   15
mask1.argument.threshisl                                   =   15
mask1.argument.atrous_do                                   =   True
mask1.argument.rmsbox                                      =   (80,20)
mask2.argument.img_format                                  =   casa
mask2.argument.threshold_format                            =   str_with_units

casa_image22.control.type                                  =   casa_clean
# casa_image22.control.mapfiles_in                           =   [concat2.output.mapfile,mask2.output.mapfile,mask2.output.threshold_5sig.mapfile]
# casa_image22.control.inputkeys                             =   [clean.vis,clean.mask,clean.threshold]
casa_image22.control.mapfiles_in                           =   [concat2.output.mapfile,mask2.output.mapfile]
casa_image22.control.inputkeys                             =   [clean.vis,clean.mask]
casa_image22.control.outputkey                             =   clean.imagename
casa_image22.control.arguments                             =   [--nologger,-c]
casa_image22.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image22.argument.clean.uvrange                        =   '>80lambda'
casa_image22.argument.clean.nterms                         =   2
casa_image22.argument.clean.niter                          =   1000
casa_image22.argument.clean.threshold                      =   '0mJy'
casa_image22.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image22.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image22.argument.clean.robust                         =   -0.25
casa_image22.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image22.argument.clean.selectdata                     =   True
casa_image22.argument.clean.gridmode                       =   'widefield'
casa_image22.argument.clean.interactive                    =   False
casa_image22.argument.clean.mode                           =   'mfs'
casa_image22.argument.clean.gain                           =   0.1
casa_image22.argument.clean.psfmode                        =   'clark'
casa_image22.argument.clean.imagermode                     =   'csclean'
casa_image22.argument.clean.ftmachine                      =   'mosaic'
casa_image22.argument.clean.mosweight                      =   False
casa_image22.argument.clean.scaletype                      =   'SAULT'
casa_image22.argument.clean.weighting                      =   'briggs'
casa_image22.argument.clean.uvtaper                        =   False
casa_image22.argument.clean.pbcor                          =   False
casa_image22.argument.clean.minpb                          =   0.2
casa_image22.argument.clean.npixels                        =   0
casa_image22.argument.clean.npercycle                      =   100
casa_image22.argument.clean.cyclefactor                    =   2.5
casa_image22.argument.clean.cyclespeedup                   =   -1
casa_image22.argument.clean.chaniter                       =   False
casa_image22.argument.clean.flatnoise                      =   True
casa_image22.argument.clean.allowchunk                     =   False

create_model2_map.control.kind                             =   plugin
create_model2_map.control.type                             =   trimMapfile
create_model2_map.control.mapfile_in                       =   casa_image22.output.casa_image22.model.tt0.mapfile
create_model2_map.control.trim                             =   .model.tt0
create_model2_map.control.mapfile_dir                      =   {{ mapfile_dir }}
create_model2_map.control.filename                         =   model1_rootnames.datamap

casa_ft2.control.type                                      =   casa
casa_ft2.control.mapfiles_in                               =   [concat_chunks.output.mapfile,create_model2_map.output.mapfile]
casa_ft2.control.inputkeys                                 =   [inputms,modelimg]
casa_ft2.control.arguments                                 =   [--nologger,-c,{{ script_dir }}/ftw.py,inputms,modelimg,2,{{ wplanes }},{{ script_dir }}/ftw.xml,{{ script_dir }}/task_ftw.py]

solve_ampphase11.control.type                              =   calibrate-stand-alone
solve_ampphase11.control.mapfile_in                        =   create_chunks_map.output.mapfile
solve_ampphase11.control.inputkey                          =   inputms
solve_ampphase11.control.arguments                         =   [-f,inputms,{{ skymodel_dir }}/empty.skymodel]
solve_ampphase11.control.args_format                       =   bbs2
solve_ampphase11.control.parset                            =   {{ parset_dir }}/facet_dirdep_phaseonly_solve.parset
solve_ampphase11.control.parsetasfile                      =   True
solve_ampphase11.argument.Step.solve.Solve.CellSize.Time   =   {{ solint_p }}

solve_ampphase12.control.type                              =   calibrate-stand-alone
solve_ampphase12.control.mapfile_in                        =   create_chunks_map.output.mapfile
solve_ampphase12.control.inputkey                          =   inputms
solve_ampphase12.control.arguments                         =   [-f,inputms,{{ skymodel_dir }}/empty.skymodel]
solve_ampphase12.control.args_format                       =   bbs2
solve_ampphase12.control.parset                            =   {{ parset_dir }}/facet_dirdep_amponly_solve.parset
solve_ampphase12.control.parsetasfile                      =   True
solve_ampphase12.argument.Strategy.ChunkSize               =   {{ solint_a }}
solve_ampphase12.argument.Step.solve.Solve.CellSize.Time   =   {{ solint_a }}

merge_amp_parmdbs1.control.type                            =   merge_parmdbs_in_time
merge_amp_parmdbs1.control.mapfile_in                      =   create_chunks_compressed_mapfile.output.mapfile
merge_amp_parmdbs1.control.inputkey                        =   mslist
merge_amp_parmdbs1.control.outputkey                       =   outparmdb
merge_amp_parmdbs1.argument.flags                          =   [mslist,instrument,outparmdb]

copy_parmdb_amp1.control.kind                              =   plugin
copy_parmdb_amp1.control.type                              =   copyParmdbtoMS
copy_parmdb_amp1.control.ms_mapfile                        =   concat_data.output.mapfile
copy_parmdb_amp1.control.parmdb_mapfile                    =   merge_amp_parmdbs1.output.mapfile

import_amp1.control.type                                   =   h5parm_importer
import_amp1.control.mapfile_in                             =   concat_data.output.mapfile
import_amp1.control.inputkey                               =   inputms
import_amp1.control.outputkey                              =   h5parm
import_amp1.control.arguments                              =   [h5parm,inputms,-i,instrument]

smooth_amp1.control.type                                   =   losoto
smooth_amp1.control.mapfile_in                             =   import_amp1.output.mapfile
smooth_amp1.control.inputkey                               =   h5parm
smooth_amp1.control.arguments                              =   [h5parm,{{ parset_dir }}/facet_amp_smooth.parset]

export_amp1.control.type                                   =   h5parm_exporter
export_amp1.control.mapfiles_in                            =   [concat_data.output.mapfile,import_amp1.output.mapfile]
export_amp1.control.inputkeys                              =   [inputms,h5parm]
export_amp1.control.arguments                              =   [h5parm,inputms,-i,instrument,-c]

copy_parmdb_smoothed_amp1.control.kind                     =   plugin
copy_parmdb_smoothed_amp1.control.type                     =   copyParmdbfromMS
copy_parmdb_smoothed_amp1.control.ms_mapfile               =   concat_data.output.mapfile
copy_parmdb_smoothed_amp1.control.parmdb_name              =   sol000_instrument
copy_parmdb_smoothed_amp1.control.suffix                   =   _amp1_smoothed
copy_parmdb_smoothed_amp1.control.mapfile_dir              =   {{ mapfile_dir }}
copy_parmdb_smoothed_amp1.control.filename                 =   parmdb_phaseamp_amp1_smoothed.mapfile

copy_parmdb_smoothed_amp1_to_chunks.control.kind           =   plugin
copy_parmdb_smoothed_amp1_to_chunks.control.type           =   copyParmdbtoMS
copy_parmdb_smoothed_amp1_to_chunks.control.ms_mapfile     =   create_chunks_map.output.mapfile
copy_parmdb_smoothed_amp1_to_chunks.control.parmdb_mapfile =   copy_parmdb_smoothed_amp1.output.mapfile

apply_amp1.control.type                                    =   calibrate-stand-alone
apply_amp1.control.mapfile_in                              =   create_chunks_map.output.mapfile
apply_amp1.control.inputkey                                =   inputms
apply_amp1.control.arguments                               =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirdep_amponly_apply.parset,{{ skymodel_dir }}/empty.skymodel]

average3.control.type                                      =   dppp
average3.control.mapfile_in                                =   create_chunks_map.output.mapfile
average3.control.inputkey                                  =   msin
average3.argument.msin.datacolumn                          =   CORRECTED_DATA
average3.argument.msout.writefullresflag                   =   False
average3.argument.steps                                    =   [avg]
average3.argument.avg.type                                 =   squash
average3.argument.avg.freqstep                             =   1
average3.argument.avg.timestep                             =   12

create_compressed_mapfile3.control.kind                    =   plugin
create_compressed_mapfile3.control.type                    =   compressMapfile
create_compressed_mapfile3.control.mapfile_in              =   average3.output.mapfile
create_compressed_mapfile3.control.mapfile_dir             =   {{ mapfile_dir }}
create_compressed_mapfile3.control.filename                =   concat3_input.mapfile

concat3.control.type                                       =   virtual_concat
concat3.control.mapfile_in                                 =   create_compressed_mapfile3.output.mapfile
concat3.control.inputkey                                   =   msfiles
concat3.control.outputkey                                  =   msconcat
concat3.argument.flags                                     =   [msfiles,msconcat]

casa_image31.control.type                                  =   casa_clean
casa_image31.control.mapfile_in                            =   concat3.output.mapfile
casa_image31.control.inputkey                              =   clean.vis
casa_image31.control.outputkey                             =   clean.imagename
casa_image31.control.arguments                             =   [--nologger,-c]
casa_image31.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image31.argument.clean.uvrange                        =   '>80lambda'
casa_image31.argument.clean.nterms                         =   2
casa_image31.argument.clean.niter                          =   1000
casa_image31.argument.clean.threshold                      =   '0mJy'
casa_image31.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image31.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image31.argument.clean.robust                         =   -0.25
casa_image31.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image31.argument.clean.selectdata                     =   True
casa_image31.argument.clean.gridmode                       =   'widefield'
casa_image31.argument.clean.interactive                    =   False
casa_image31.argument.clean.mode                           =   'mfs'
casa_image31.argument.clean.gain                           =   0.1
casa_image31.argument.clean.psfmode                        =   'clark'
casa_image31.argument.clean.imagermode                     =   'csclean'
casa_image31.argument.clean.ftmachine                      =   'mosaic'
casa_image31.argument.clean.mosweight                      =   False
casa_image31.argument.clean.scaletype                      =   'SAULT'
casa_image31.argument.clean.weighting                      =   'briggs'
casa_image31.argument.clean.uvtaper                        =   False
casa_image31.argument.clean.pbcor                          =   False
casa_image31.argument.clean.minpb                          =   0.2
casa_image31.argument.clean.npixels                        =   0
casa_image31.argument.clean.npercycle                      =   100
casa_image31.argument.clean.cyclefactor                    =   2.5
casa_image31.argument.clean.cyclespeedup                   =   -1
casa_image31.argument.clean.chaniter                       =   False
casa_image31.argument.clean.flatnoise                      =   True
casa_image31.argument.clean.allowchunk                     =   False

mask3.control.type                                         =   make_clean_mask
mask3.control.mapfile_in                                   =   casa_image31.output.casa_image31.image.tt0.mapfile
mask3.control.inputkey                                     =   imagefile
mask3.control.outputkey                                    =   maskfile
mask3.argument.flags                                       =   [imagefile,maskfile]
mask1.argument.threshpix                                   =   10
mask1.argument.threshisl                                   =   10
mask1.argument.atrous_do                                   =   True
mask1.argument.rmsbox                                      =   (80,20)
mask3.argument.img_format                                  =   casa
mask3.argument.threshold_format                            =   str_with_units

casa_image32.control.type                                  =   casa_clean
# casa_image32.control.mapfiles_in                           =   [concat3.output.mapfile,mask3.output.mapfile,mask3.output.threshold_5sig.mapfile]
# casa_image32.control.inputkeys                             =   [clean.vis,clean.mask,clean.threshold]
casa_image32.control.mapfiles_in                           =   [concat3.output.mapfile,mask3.output.mapfile]
casa_image32.control.inputkeys                             =   [clean.vis,clean.mask]
casa_image32.control.outputkey                             =   clean.imagename
casa_image32.control.arguments                             =   [--nologger,-c]
casa_image32.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image32.argument.clean.uvrange                        =   '>80lambda'
casa_image32.argument.clean.nterms                         =   2
casa_image32.argument.clean.niter                          =   1000
casa_image32.argument.clean.threshold                      =   '0mJy'
casa_image32.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image32.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image32.argument.clean.robust                         =   -0.25
casa_image32.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image32.argument.clean.selectdata                     =   True
casa_image32.argument.clean.gridmode                       =   'widefield'
casa_image32.argument.clean.interactive                    =   False
casa_image32.argument.clean.mode                           =   'mfs'
casa_image32.argument.clean.gain                           =   0.1
casa_image32.argument.clean.psfmode                        =   'clark'
casa_image32.argument.clean.imagermode                     =   'csclean'
casa_image32.argument.clean.ftmachine                      =   'mosaic'
casa_image32.argument.clean.mosweight                      =   False
casa_image32.argument.clean.scaletype                      =   'SAULT'
casa_image32.argument.clean.weighting                      =   'briggs'
casa_image32.argument.clean.uvtaper                        =   False
casa_image32.argument.clean.pbcor                          =   False
casa_image32.argument.clean.minpb                          =   0.2
casa_image32.argument.clean.npixels                        =   0
casa_image32.argument.clean.npercycle                      =   100
casa_image32.argument.clean.cyclefactor                    =   2.5
casa_image32.argument.clean.cyclespeedup                   =   -1
casa_image32.argument.clean.chaniter                       =   False
casa_image32.argument.clean.flatnoise                      =   True
casa_image32.argument.clean.allowchunk                     =   False

create_model3_map.control.kind                             =   plugin
create_model3_map.control.type                             =   trimMapfile
create_model3_map.control.mapfile_in                       =   casa_image32.output.casa_image32.model.tt0.mapfile
create_model3_map.control.trim                             =   .model.tt0
create_model3_map.control.mapfile_dir                      =   {{ mapfile_dir }}
create_model3_map.control.filename                         =   model1_rootnames.datamap

casa_ft3.control.type                                      =   casa
casa_ft3.control.mapfiles_in                               =   [concat_chunks.output.mapfile,create_model3_map.output.mapfile]
casa_ft3.control.inputkeys                                 =   [inputms,modelimg]
casa_ft3.control.arguments                                 =   [--nologger,-c,{{ script_dir }}/ftw.py,inputms,modelimg,2,{{ wplanes }},{{ script_dir }}/ftw.xml,{{ script_dir }}/task_ftw.py]

solve_ampphase21.control.type                              =   calibrate-stand-alone
solve_ampphase21.control.mapfile_in                        =   create_chunks_map.output.mapfile
solve_ampphase21.control.inputkey                          =   inputms
solve_ampphase21.control.arguments                         =   [-f,inputms,{{ skymodel_dir }}/empty.skymodel]
solve_ampphase21.control.args_format                       =   bbs2
solve_ampphase21.control.parset                            =   {{ parset_dir }}/facet_dirdep_phaseonly_solve.parset
solve_ampphase21.control.parsetasfile                      =   True
solve_ampphase21.argument.Step.solve.Solve.CellSize.Time   =   {{ solint_p }}

merge_phase_parmdbs.control.type                           =   merge_parmdbs_in_time
merge_phase_parmdbs.control.mapfile_in                     =   create_chunks_compressed_mapfile.output.mapfile
merge_phase_parmdbs.control.inputkey                       =   mslist
merge_phase_parmdbs.control.outputkey                      =   outparmdb
merge_phase_parmdbs.argument.flags                         =   [mslist,instrument,outparmdb]

solve_ampphase22.control.type                              =   calibrate-stand-alone
solve_ampphase22.control.mapfile_in                        =   create_chunks_map.output.mapfile
solve_ampphase22.control.inputkey                          =   inputms
solve_ampphase22.control.arguments                         =   [-f,inputms,{{ skymodel_dir }}/empty.skymodel]
solve_ampphase22.control.args_format                       =   bbs2
solve_ampphase22.control.parset                            =   {{ parset_dir }}/facet_dirdep_amponly_solve.parset
solve_ampphase22.control.parsetasfile                      =   True
solve_ampphase22.argument.Strategy.ChunkSize               =   {{ solint_a }}
solve_ampphase22.argument.Step.solve.Solve.CellSize.Time   =   {{ solint_a }}

merge_amp_parmdbs2.control.type                            =   merge_parmdbs_in_time
merge_amp_parmdbs2.control.mapfile_in                      =   create_chunks_compressed_mapfile.output.mapfile
merge_amp_parmdbs2.control.inputkey                        =   mslist
merge_amp_parmdbs2.control.outputkey                       =   outparmdb
merge_amp_parmdbs2.argument.flags                          =   [mslist,instrument,outparmdb]

copy_parmdb_amp2.control.kind                              =   plugin
copy_parmdb_amp2.control.type                              =   copyParmdbtoMS
copy_parmdb_amp2.control.ms_mapfile                        =   concat_data.output.mapfile
copy_parmdb_amp2.control.parmdb_mapfile                    =   merge_amp_parmdbs2.output.mapfile

import_amp2.control.type                                   =   h5parm_importer
import_amp2.control.mapfile_in                             =   concat_data.output.mapfile
import_amp2.control.inputkey                               =   inputms
import_amp2.control.outputkey                              =   h5parm
import_amp2.control.arguments                              =   [h5parm,inputms,-i,instrument]

smooth_amp2.control.type                                   =   losoto
smooth_amp2.control.mapfile_in                             =   import_amp2.output.mapfile
smooth_amp2.control.inputkey                               =   h5parm
smooth_amp2.control.arguments                              =   [h5parm,{{ parset_dir }}/facet_amp_smooth.parset]

export_amp2.control.type                                   =   h5parm_exporter
export_amp2.control.mapfiles_in                            =   [{{ shifted_cal_concat_datamap }},import_amp2.output.mapfile]
export_amp2.control.inputkeys                              =   [inputms,h5parm]
export_amp2.control.arguments                              =   [h5parm,inputms,-i,instrument,-c]

copy_parmdb_smoothed_amp2.control.kind                     =   plugin
copy_parmdb_smoothed_amp2.control.type                     =   copyParmdbfromMS
copy_parmdb_smoothed_amp2.control.ms_mapfile               =   concat_data.output.mapfile
copy_parmdb_smoothed_amp2.control.parmdb_name              =   sol000_instrument
copy_parmdb_smoothed_amp2.control.suffix                   =   _amp2_smoothed
copy_parmdb_smoothed_amp2.control.mapfile_dir              =   {{ mapfile_dir }}
copy_parmdb_smoothed_amp2.control.filename                 =   parmdb_phaseamp_amp2_smoothed.mapfile

copy_parmdb_smoothed_amp2_to_chunks.control.kind           =   plugin
copy_parmdb_smoothed_amp2_to_chunks.control.type           =   copyParmdbtoMS
copy_parmdb_smoothed_amp2_to_chunks.control.ms_mapfile     =   create_chunks_map.output.mapfile
copy_parmdb_smoothed_amp2_to_chunks.control.parmdb_mapfile =   copy_parmdb_smoothed_amp2.output.mapfile

apply_amp2.control.type                                    =   calibrate-stand-alone
apply_amp2.control.mapfile_in                              =   create_chunks_map.output.mapfile
apply_amp2.control.inputkey                                =   inputms
apply_amp2.control.arguments                               =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirdep_amponly_apply.parset,{{ skymodel_dir }}/empty.skymodel]

average4.control.type                                      =   dppp
average4.control.mapfile_in                                =   create_chunks_map.output.mapfile
average4.control.inputkey                                  =   msin
average4.argument.msin.datacolumn                          =   CORRECTED_DATA
average4.argument.msout.writefullresflag                   =   False
average4.argument.steps                                    =   [avg]
average4.argument.avg.type                                 =   squash
average4.argument.avg.freqstep                             =   1
average4.argument.avg.timestep                             =   12

create_compressed_mapfile4.control.kind                    =   plugin
create_compressed_mapfile4.control.type                    =   compressMapfile
create_compressed_mapfile4.control.mapfile_in              =   average4.output.mapfile
create_compressed_mapfile4.control.mapfile_dir             =   {{ mapfile_dir }}
create_compressed_mapfile4.control.filename                =   concat4_input.mapfile

concat4.control.type                                       =   virtual_concat
concat4.control.mapfile_in                                 =   create_compressed_mapfile4.output.mapfile
concat4.control.inputkey                                   =   msfiles
concat4.control.outputkey                                  =   msconcat
concat4.argument.flags                                     =   [msfiles,msconcat]

casa_image41.control.type                                  =   casa
casa_image41.control.mapfile_in                            =   concat4.output.mapfile
casa_image41.control.inputkey                              =   clean.vis
casa_image41.control.outputkey                             =   clean.imagename
casa_image41.control.arguments                             =   [--nologger,-c]
casa_image41.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image41.argument.clean.uvrange                        =   '>80lambda'
casa_image41.argument.clean.nterms                         =   2
casa_image41.argument.clean.niter                          =   1000
casa_image41.argument.clean.threshold                      =   '0mJy'
casa_image41.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image41.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image41.argument.clean.robust                         =   -0.25
casa_image41.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image41.argument.clean.selectdata                     =   True
casa_image41.argument.clean.gridmode                       =   'widefield'
casa_image41.argument.clean.interactive                    =   False
casa_image41.argument.clean.mode                           =   'mfs'
casa_image41.argument.clean.gain                           =   0.1
casa_image41.argument.clean.psfmode                        =   'clark'
casa_image41.argument.clean.imagermode                     =   'csclean'
casa_image41.argument.clean.ftmachine                      =   'mosaic'
casa_image41.argument.clean.mosweight                      =   False
casa_image41.argument.clean.scaletype                      =   'SAULT'
casa_image41.argument.clean.weighting                      =   'briggs'
casa_image41.argument.clean.uvtaper                        =   False
casa_image41.argument.clean.pbcor                          =   False
casa_image41.argument.clean.minpb                          =   0.2
casa_image41.argument.clean.npixels                        =   0
casa_image41.argument.clean.npercycle                      =   100
casa_image41.argument.clean.cyclefactor                    =   2.5
casa_image41.argument.clean.cyclespeedup                   =   -1
casa_image41.argument.clean.chaniter                       =   False
casa_image41.argument.clean.flatnoise                      =   True
casa_image41.argument.clean.allowchunk                     =   False

mask4.control.type                                         =   make_clean_mask
mask4.control.mapfile_in                                   =   casa_image41.output.casa_image41.image.tt0.mapfile
mask4.control.inputkey                                     =   imagefile
mask4.control.outputkey                                    =   maskfile
mask4.argument.flags                                       =   [imagefile,maskfile]
mask1.argument.threshpix                                   =   10
mask1.argument.threshisl                                   =   10
mask1.argument.atrous_do                                   =   True
mask1.argument.rmsbox                                      =   (80,20)
mask4.argument.img_format                                  =   casa
mask4.argument.threshold_format                            =   str_with_units

casa_image42.control.type                                  =   casa
# casa_image42.control.mapfiles_in                           =   [concat4.output.mapfile,mask4.output.mapfile,mask4.output.threshold_5sig.mapfile]
# casa_image42.control.inputkeys                             =   [clean.vis,clean.mask,clean.threshold]
casa_image42.control.mapfiles_in                           =   [concat4.output.mapfile,mask4.output.mapfile]
casa_image42.control.inputkeys                             =   [clean.vis,clean.mask]
casa_image42.control.outputkey                             =   clean.imagename
casa_image42.control.arguments                             =   [--nologger,-c]
casa_image42.argument.clean.wprojplanes                    =   {{ wplanes }}
casa_image42.argument.clean.uvrange                        =   '>80lambda'
casa_image42.argument.clean.nterms                         =   2
casa_image42.argument.clean.niter                          =   1000
casa_image42.argument.clean.threshold                      =   '0mJy'
casa_image42.argument.clean.imsize                         =   [{{ imsize }}, {{ imsize }}]
casa_image42.argument.clean.cell                           =   ['1.5arcsec', '1.5arcsec']
casa_image42.argument.clean.robust                         =   -0.25
casa_image42.argument.clean.multiscale                     =   [0, 3, 7, 25, 60, 150]
casa_image42.argument.clean.selectdata                     =   True
casa_image42.argument.clean.gridmode                       =   'widefield'
casa_image42.argument.clean.interactive                    =   False
casa_image42.argument.clean.mode                           =   'mfs'
casa_image42.argument.clean.gain                           =   0.1
casa_image42.argument.clean.psfmode                        =   'clark'
casa_image42.argument.clean.imagermode                     =   'csclean'
casa_image42.argument.clean.ftmachine                      =   'mosaic'
casa_image42.argument.clean.mosweight                      =   False
casa_image42.argument.clean.scaletype                      =   'SAULT'
casa_image42.argument.clean.weighting                      =   'briggs'
casa_image42.argument.clean.uvtaper                        =   False
casa_image42.argument.clean.pbcor                          =   False
casa_image42.argument.clean.minpb                          =   0.2
casa_image42.argument.clean.npixels                        =   0
casa_image42.argument.clean.npercycle                      =   100
casa_image42.argument.clean.cyclefactor                    =   2.5
casa_image42.argument.clean.cyclespeedup                   =   -1
casa_image42.argument.clean.chaniter                       =   False
casa_image42.argument.clean.flatnoise                      =   True
casa_image42.argument.clean.allowchunk                     =   False

merge_selfcal_parmdbs.control.type                         =   merge_parmdbs_selfcal
merge_selfcal_parmdbs.control.mapfiles_in                  =   [merge_phase_parmdbs.output.mapfile,copy_parmdb_smoothed_amp2.output.mapfile]
merge_selfcal_parmdbs.control.inputkeys                    =   [parmdb_p,parmdb_a]
merge_selfcal_parmdbs.control.outputkey                    =   parmdb_out
merge_selfcal_parmdbs.argument.flags                       =   [parmdb_p,parmdb_a,parmdb_out]

copy_final_model_map.control.kind                          =   plugin
copy_final_model_map.control.type                          =   copyMapfile
copy_final_model_map.control.mapfile_in                    =   merge_selfcal_parmdbs.output.mapfile
copy_final_model_map.control.mapfile_dir                   =   {{ mapfile_dir }}
copy_final_model_map.control.filename                      =   dir_dep_parmdb.datamap

copy_parmdb2.control.kind                                  =   plugin
copy_parmdb2.control.type                                  =   copyParmdbtoMS
copy_parmdb2.control.ms_mapfile                            =   {{ shifted_all_bands_datamap }}
copy_parmdb2.control.parmdb_mapfile                        =   merge_selfcal_parmdbs.output.mapfile

apply_dir_dep.control.type                                 =   calibrate-stand-alone
apply_dir_dep.control.mapfile_in                           =   {{ shifted_all_bands_datamap }}
apply_dir_dep.control.inputkey                             =   inputms
apply_dir_dep.control.arguments                            =   [inputms,{{ parset_dir }}/facet_dirdep_apply.parset,{{ skymodel_dir }}/empty.skymodel]

average5.control.type                                      =   dppp
average5.control.mapfile_in                                =   {{ shifted_all_bands_datamap }}
average5.control.inputkey                                  =   msin
average5.parsetarg.msin.datacolumn                         =   CORRECTED_DATA
average5.parsetarg.msout.writefullresflag                  =   False
average5.parsetarg.steps                                   =   [avg]
average5.parsetarg.avg.type                                =   squash
average5.parsetarg.avg.freqstep                            =   5
average5.parsetarg.avg.timestep                            =   3

create_compressed_mapfile5.control.kind                    =   plugin
create_compressed_mapfile5.control.type                    =   compressMapfile
create_compressed_mapfile5.control.mapfile_in              =   average5.output.mapfile
create_compressed_mapfile5.control.mapfile_dir             =   {{ mapfile_dir }}
create_compressed_mapfile5.control.filename                =   concat_averaged_input.mapfile

concat_averaged.control.type                               =   virtual_concat
concat_averaged.control.mapfile_in                         =   create_compressed_mapfile5.output.mapfile
concat_averaged.control.inputkey                           =   msfiles
concat_averaged.control.outputkey                          =   msconcat
concat_averaged.argument.flags                             =   [msfiles,msconcat]

wsclean1.control.type                                      =   wsclean
wsclean1.control.mapfile_in                                =   concat_averaged.output.mapfile
wsclean1.control.inputkey                                  =   msfile
wsclean1.argument.flags                                    =   [-no-update-model-required,msfile]
wsclean1.argument.size                                     =   {{ npix }} {{ npix }}
wsclean1.argument.niter                                    =   15000
wsclean1.argument.threshold                                =   0.0
wsclean1.argument.pol                                      =   I
wsclean1.argument.weight                                   =   briggs -0.5
wsclean1.argument.mgain                                    =   0.5
wsclean1.argument.gain                                     =   0.1
wsclean1.argument.cleanborder                              =   0
wsclean1.argument.minuv-l                                  =   80
wsclean1.argument.maxuv-l                                  =   1000000
wsclean1.argument.scale                                    =   0.000417
wsclean1.argument.mem                                      =   90

mask5.control.type                                         =   make_clean_mask
mask5.control.mapfile_in                                   =   wsclean1.output.wsclean1-image.fits.mapfile
mask5.control.inputkey                                     =   imagefile
mask5.control.outputkey                                    =   maskfile
mask5.argument.flags                                       =   [imagefile,maskfile]
mask5.argument.threshisl                                   =   5
mask5.argument.threshpix                                   =   5
mask5.argument.rmsbox                                      =   (60,20)
mask5.argument.adaptive_rmsbox                             =   True
mask5.argument.img_format                                  =   fits

wsclean2.control.type                                      =   wsclean
wsclean2.control.mapfiles_in                               =   [concat_averaged.output.mapfile,mask5.output.mapfile]
wsclean2.control.inputkeys                                 =   [msfile,fitsmask]
wsclean2.argument.flags                                    =   [-no-update-model-required,msfile]
wsclean2.argument.size                                     =   {{ npix }} {{ npix }}
wsclean2.argument.niter                                    =   1000000
wsclean2.argument.threshold                                =   mask5.output.threshold_5sig.mapfile
wsclean2.argument.pol                                      =   I
wsclean2.argument.weight                                   =   briggs -0.5
wsclean2.argument.mgain                                    =   0.5
wsclean2.argument.gain                                     =   0.1
wsclean2.argument.cleanborder                              =   0
wsclean2.argument.minuv-l                                  =   80
wsclean2.argument.maxuv-l                                  =   2000
wsclean2.argument.scale                                    =   0.000417
wsclean2.argument.mem                                      =   90

create_model4_map.control.kind                             =   plugin
create_model4_map.control.type                             =   trimMapfile
create_model4_map.control.mapfile_in                       =   wsclean2.output.wsclean2-model.fits.mapfile
create_model4_map.control.trim                             =   -model.fits
create_model4_map.control.mapfile_dir                      =   {{ mapfile_dir }}
create_model4_map.control.filename                         =   model_rootnames.datamap

create_compressed_mapfile6.control.kind                    =   plugin
create_compressed_mapfile6.control.type                    =   compressMapfile
create_compressed_mapfile6.control.mapfile_in              =   {{ shifted_all_bands_datamap }}
create_compressed_mapfile6.control.mapfile_dir             =   {{ mapfile_dir }}
create_compressed_mapfile6.control.filename                =   concat_unaveraged_input.mapfile

concat_unaveraged.control.type                             =   virtual_concat
concat_unaveraged.control.mapfile_in                       =   create_compressed_mapfile6.output.mapfile
concat_unaveraged.control.inputkey                         =   msfiles
concat_unaveraged.control.outputkey                        =   msconcat
concat_unaveraged.argument.flags                           =   [msfiles,msconcat]

wsclean_ft.control.type                                    =   wsclean_ft
wsclean_ft.control.mapfiles_in                             =   [concat_unaveraged.output.mapfile,create_model_map.output.mapfile]
wsclean_ft.control.inputkeys                               =   [msfile,name]
wsclean_ft.argument.flags                                  =   [-predict,msfile]
wsclean_ft.argument.size                                   =   {{ npix }} {{ npix }}
wsclean_ft.argument.scale                                  =   0.000417
wsclean_ft.argument.mem                                    =   90

copy_final_image_map.control.kind                          =   plugin
copy_final_image_map.control.type                          =   copyMapfile
copy_final_image_map.control.mapfile_in                    =   wsclean2.output.wsclean2-image.fits.mapfile
copy_final_image_map.control.mapfile_dir                   =   {{ mapfile_dir }}
copy_final_image_map.control.filename                      =   facet_image.datamap

copy_parmdb_dirdep.control.kind                            =   plugin
copy_parmdb_dirdep.control.type                            =   copyParmdbtoMS
copy_parmdb_dirdep.control.ms_mapfile                      =   {{ shifted_all_bands_datamap }}
copy_parmdb_dirdep.control.parmdb_mapfile                  =   merge_selfcal_parmdbs.output.mapfile

subtract.control.type                                      =   calibrate-stand-alone
subtract.control.mapfile_in                                =   {{ shifted_all_bands_datamap }}
subtract.control.inputkey                                  =   inputms
subtract.control.arguments                                 =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirdep_subtract.parset,{{ skymodel_dir }}/empty.skymodel]

copy_parmdb_dirindep1.control.kind                         =   plugin
copy_parmdb_dirindep1.control.type                         =   copyParmdbtoMS
copy_parmdb_dirindep1.control.ms_mapfile                   =   {{ shifted_all_bands_datamap }}
copy_parmdb_dirindep1.control.parmdb_mapfile               =   {{ dir_indep_parmdbs_datamap }}

copy_parmdb_dirindep2.control.kind                         =   plugin
copy_parmdb_dirindep2.control.type                         =   copyParmdbtoMS
copy_parmdb_dirindep2.control.ms_mapfile                   =   {{ shifted_empty_bands_datamap }}
copy_parmdb_dirindep2.control.parmdb_mapfile               =   {{ dir_indep_parmdbs_datamap }}

apply_dir_indep_pre.control.type                           =   calibrate-stand-alone
apply_dir_indep_pre.control.mapfile_in                     =   {{ shifted_all_bands_datamap }}
apply_dir_indep_pre.control.inputkey                       =   inputms
apply_dir_indep_pre.control.arguments                      =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirindep_apply_pre.parset,{{ skymodel_dir }}/empty.skymodel]

apply_dir_indep_post.control.type                          =   calibrate-stand-alone
apply_dir_indep_post.control.mapfile_in                    =   {{ shifted_empty_bands_datamap }}
apply_dir_indep_post.control.inputkey                      =   inputms
apply_dir_indep_post.control.arguments                     =   [--replace-sourcedb,inputms,{{ parset_dir }}/facet_dirindep_apply_post.parset,{{ skymodel_dir }}/empty.skymodel]

average_pre.control.type                                   =   dppp
average_pre.control.mapfile_in                             =   {{ shifted_all_bands_datamap }}
average_pre.control.inputkey                               =   msin
average_pre.parsetarg.msin.datacolumn                      =   CORRECTED_SUBTRACTED_DATA
average_pre.parsetarg.msout.writefullresflag               =   False
average_pre.parsetarg.steps                                =   [avg]
average_pre.parsetarg.avg.type                             =   squash
average_pre.parsetarg.avg.freqstep                         =   20
average_pre.parsetarg.avg.timestep                         =   6

average_post.control.type                                  =   dppp
average_post.control.mapfile_in                            =   {{ shifted_empty_bands_datamap }}
average_post.control.inputkey                              =   msin
average_post.parsetarg.msin.datacolumn                     =   CORRECTED_SUBTRACTED_DATA
average_post.parsetarg.msout.writefullresflag              =   False
average_post.parsetarg.steps                               =   [avg]
average_post.parsetarg.avg.type                            =   squash
average_post.parsetarg.avg.freqstep                        =   20
average_post.parsetarg.avg.timestep                        =   6

wsclean_pre1.control.type                                  =   wsclean
wsclean_pre1.control.mapfile_in                            =   average_pre.output.mapfile
wsclean_pre1.control.inputkey                              =   msfile
wsclean_pre1.argument.flags                                =   [-no-update-model-required,msfile]
wsclean_pre1.argument.size                                 =   2048 2048
wsclean_pre1.argument.niter                                =   10
wsclean_pre1.argument.threshold                            =   0.0
wsclean_pre1.argument.pol                                  =   I
wsclean_pre1.argument.weight                               =   briggs -0.5
wsclean_pre1.argument.mgain                                =   0.5
wsclean_pre1.argument.gain                                 =   0.1
wsclean_pre1.argument.cleanborder                          =   0
wsclean_pre1.argument.minuv-l                              =   80
wsclean_pre1.argument.maxuv-l                              =   2500
wsclean_pre1.argument.scale                                =   0.00833
wsclean_pre1.argument.mem                                  =   90

mask_pre.control.type                                      =   make_clean_mask
mask_pre.control.mapfile_in                                =   wsclean_pre1.output.wsclean_pre1-image.fits.mapfile
mask_pre.control.inputkey                                  =   imagefile
mask_pre.control.outputkey                                 =   maskfile
mask_pre.argument.flags                                    =   [imagefile,maskfile]
mask_pre.argument.threshisl                                =   5
mask_pre.argument.threshpix                                =   5
mask_pre.argument.rmsbox                                   =   (60,20)
mask_pre.argument.img_format                               =   fits

wsclean_pre2.control.type                                  =   wsclean
wsclean_pre2.control.mapfiles_in                           =   [average_pre.output.mapfile,mask_pre.output.mapfile]
wsclean_pre2.control.inputkeys                             =   [msfile,fitsmask]
wsclean_pre2.argument.flags                                =   [-no-update-model-required,msfile]
wsclean_pre2.argument.size                                 =   2048 2048
wsclean_pre2.argument.niter                                =   10
wsclean_pre2.argument.threshold                            =   0.0
wsclean_pre2.argument.pol                                  =   I
wsclean_pre2.argument.weight                               =   briggs -0.5
wsclean_pre2.argument.mgain                                =   0.5
wsclean_pre2.argument.gain                                 =   0.1
wsclean_pre2.argument.cleanborder                          =   0
wsclean_pre2.argument.minuv-l                              =   80
wsclean_pre2.argument.maxuv-l                              =   2500
wsclean_pre2.argument.scale                                =   0.00833
wsclean_pre2.argument.mem                                  =   90

wsclean_post1.control.type                                 =   wsclean
wsclean_post1.control.mapfile_in                           =   average_post.output.mapfile
wsclean_post1.control.inputkey                             =   msfile
wsclean_post1.argument.flags                               =   [-no-update-model-required,msfile]
wsclean_post1.argument.size                                =   2048 2048
wsclean_post1.argument.niter                               =   10
wsclean_post1.argument.threshold                           =   0.0
wsclean_post1.argument.pol                                 =   I
wsclean_post1.argument.weight                              =   briggs -0.5
wsclean_post1.argument.mgain                               =   0.5
wsclean_post1.argument.gain                                =   0.1
wsclean_post1.argument.cleanborder                         =   0
wsclean_post1.argument.minuv-l                             =   80
wsclean_post1.argument.maxuv-l                             =   2500
wsclean_post1.argument.scale                               =   0.00833
wsclean_post1.argument.mem                                 =   90

mask_post.control.type                                     =   make_clean_mask
mask_post.control.mapfile_in                               =   wsclean_post1.output.wsclean_post1-image.fits.mapfile
mask_post.control.inputkey                                 =   imagefile
mask_post.control.outputkey                                =   maskfile
mask_post.argument.flags                                   =   [imagefile,maskfile]
mask_post.argument.threshisl                               =   5
mask_post.argument.threshpix                               =   5
mask_post.argument.rmsbox                                  =   (60,20)
mask_post.argument.img_format                              =   fits

wsclean_post2.control.type                                 =   wsclean
wsclean_post2.control.mapfiles_in                          =   [average_post.output.mapfile,mask_post.output.mapfile]
wsclean_post2.control.inputkeys                            =   [msfile,fitsmask]
wsclean_post2.argument.flags                               =   [-no-update-model-required,msfile]
wsclean_post2.argument.size                                =   2048 2048
wsclean_post2.argument.niter                               =   10
wsclean_post2.argument.threshold                           =   0.0
wsclean_post2.argument.pol                                 =   I
wsclean_post2.argument.weight                              =   briggs -0.5
wsclean_post2.argument.mgain                               =   0.5
wsclean_post2.argument.gain                                =   0.1
wsclean_post2.argument.cleanborder                         =   0
wsclean_post2.argument.minuv-l                             =   80
wsclean_post2.argument.maxuv-l                             =   2500
wsclean_post2.argument.scale                               =   0.00833
wsclean_post2.argument.mem                                 =   90

verify_subtract.control.type                               =   make_clean_mask
verify_subtract.control.mapfiles_in                        =   [wsclean_pre2.output.wsclean_pre2-image.fits.mapfile, wsclean_post2.output.wsclean_post2-image.fits.mapfile]
verify_subtract.control.inputkey                           =   imagefile
verify_subtract.control.outputkey                          =   maskfile
verify_subtract.argument.flags                             =   [image_pre, image_post, 0.75]

copy_verify_subtract_map.control.kind                      =   plugin
copy_verify_subtract_map.control.type                      =   copyMapfile
copy_verify_subtract_map.control.mapfile_in                =   verify_subtract.output.ok.mapfile
copy_verify_subtract_map.control.mapfile_dir               =   {{ mapfile_dir }}
copy_verify_subtract_map.control.filename                  =   verify_subtract.datamap
