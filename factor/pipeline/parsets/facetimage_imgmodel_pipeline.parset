pipeline.steps = [update_mapfile_hosts, update_input_bands_hosts, expand_merged_parmdb_map, shift_empty, create_compressed_mapfile1, {% block model_data_steps %} wsclean_ft, {% endblock model_data_steps %} corrupt_final_model, add_model_to_empty_data, apply_dir_dep_fast, apply_dir_dep_slow, average, create_compressed_mapfile2, {% block full_image_steps %} wsclean_image_full1, create_imagebase_map1, adjust_wsclean_mapfile1, mask, wsclean_image_full2, create_imagebase_map2, adjust_wsclean_mapfile2 {% endblock full_image_steps %}]

pipeline.pluginpath                                   =   {{ pipeline_dir }}/plugins

update_mapfile_hosts.control.kind                     =   plugin
update_mapfile_hosts.control.type                     =   updateHosts
update_mapfile_hosts.control.mapfile_dir              =   input.output.mapfile_dir
update_mapfile_hosts.control.hosts                    =   {{ hosts }}

update_input_bands_hosts.control.kind                 =   plugin
update_input_bands_hosts.control.type                 =   updateHosts
update_input_bands_hosts.control.mapfile_in           =   {{ input_bands_mapfile }}
update_input_bands_hosts.control.hosts                =   {{ hosts }}

expand_merged_parmdb_map.control.kind                 =   plugin
expand_merged_parmdb_map.control.type                 =   expandMapfile
expand_merged_parmdb_map.control.mapfile_in           =   {{ dir_dep_parmdb_mapfile }}
expand_merged_parmdb_map.control.mapfile_to_match     =   {{ input_bands_mapfile }}
expand_merged_parmdb_map.control.mapfile_dir          =   input.output.mapfile_dir
expand_merged_parmdb_map.control.filename             =   expand_merged_parmdbs.mapfile

shift_empty.control.type                              =   dppp
shift_empty.control.opts.mapfile_in                   =   {{ input_bands_mapfile }}
shift_empty.control.opts.inputkey                     =   msin
shift_empty.argument.numthreads                       =   {{ max_cpus_per_band }}
shift_empty.argument.msin.datacolumn                  =   SUBTRACTED_DATA_ALL_NEW
shift_empty.argument.msout.overwrite                  =   True
shift_empty.argument.msout.writefullresflag           =   False
shift_empty.argument.local_scratch_dir                =   {{ local_dir }}
shift_empty.argument.steps                            =   [shift]
shift_empty.argument.shift.type                       =   phaseshifter
shift_empty.argument.shift.phasecenter                =   [{{ facet_ra }}deg, {{ facet_dec }}deg]

create_compressed_mapfile1.control.kind               =   plugin
create_compressed_mapfile1.control.type               =   compressMapfile
create_compressed_mapfile1.control.mapfile_in         =   shift_empty.output.mapfile
create_compressed_mapfile1.control.mapfile_dir        =   input.output.mapfile_dir
create_compressed_mapfile1.control.filename           =   concat_unaveraged_input.mapfile

{% block model_data_parms %}
wsclean_ft.control.type                               =   wsclean_ft
wsclean_ft.control.mapfiles_in                        =   [create_compressed_mapfile1.output.mapfile,{{ facet_model_mapfile }}]
wsclean_ft.control.inputkeys                          =   [msfile,name]
wsclean_ft.argument.flags                             =   [-predict,msfile]
wsclean_ft.argument.size                              =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_ft.argument.scale                             =   0.000417
wsclean_ft.argument.mem                               =   {{ max_percent_memory }}
wsclean_ft.argument.channelsout                       =   {{ wsclean_nchannels }}
wsclean_ft.argument.j                                 =   {{ max_cpus_per_img }}
wsclean_ft.argument.tempdir                           =   {{ local_dir }}
{% endblock model_data_parms %}

corrupt_final_model.control.type                      =   dppp
corrupt_final_model.control.opts.mapfiles_in          =   [shift_empty.output.mapfile,expand_merged_parmdb_map.output.mapfile]
corrupt_final_model.control.opts.inputkeys            =   [msin,parmdb]
corrupt_final_model.argument.numthreads               =   {{ max_cpus_per_band }}
corrupt_final_model.argument.msin.datacolumn          =   MODEL_DATA
corrupt_final_model.argument.msout.overwrite          =   True
corrupt_final_model.argument.msout.writefullresflag   =   False
corrupt_final_model.argument.local_scratch_dir        =   {{ local_dir }}
corrupt_final_model.argument.steps                    =   [corrupt_fast1,corrupt_fast2,corrupt_slow]
corrupt_final_model.argument.corrupt_fast1.type       =   applycal
corrupt_final_model.argument.corrupt_fast1.parmdb     =   parmdb
corrupt_final_model.argument.corrupt_fast1.correction =   tec
corrupt_final_model.argument.corrupt_fast1.invert     =   False
corrupt_final_model.argument.correct_fast1.timeslotsperparmupdate = {{ timeSlotsPerParmUpdate }}
corrupt_final_model.argument.corrupt_fast2.type       =   applycal
corrupt_final_model.argument.corrupt_fast2.parmdb     =   parmdb
corrupt_final_model.argument.corrupt_fast2.correction =   commonscalarphase
corrupt_final_model.argument.corrupt_fast2.invert     =   False
corrupt_final_model.argument.correct_fast2.timeslotsperparmupdate = {{ timeSlotsPerParmUpdate }}
corrupt_final_model.argument.corrupt_slow.type        =   applycal
corrupt_final_model.argument.corrupt_slow.parmdb      =   parmdb
corrupt_final_model.argument.corrupt_slow.invert      =   False
corrupt_final_model.argument.correct_slow.timeslotsperparmupdate = {{ timeSlotsPerParmUpdate }}

add_model_to_empty_data.control.type                  =   add_subtract_columns
add_model_to_empty_data.control.opts.mapfiles_in      =   [shift_empty.output.mapfile,corrupt_final_model.output.mapfile]
add_model_to_empty_data.control.opts.inputkeys        =   [file1,file2]
add_model_to_empty_data.argument.flags                =   [file1,file2,DATA,DATA,FACET_DATA_ALL,add]

apply_dir_dep_fast.control.type                       =   calibrate-stand-alone_new
apply_dir_dep_fast.control.mapfiles_in                =   [shift_empty.output.mapfile,expand_merged_parmdb_map.output.mapfile]
apply_dir_dep_fast.control.inputkeys                  =   [inputms,inputparmdb]
apply_dir_dep_fast.argument.observation               =   inputms
apply_dir_dep_fast.argument.parset                    =   {{ parset_dir }}//facet_dirdep_apply_fast.parset
apply_dir_dep_fast.argument.catalog                   =   {{ skymodel_dir }}/empty.skymodel
apply_dir_dep_fast.argument.parmdb                    =   inputparmdb
apply_dir_dep_fast.argument.replace-sourcedb          =   True
apply_dir_dep_fast.argument.replace-parmdb            =   True
apply_dir_dep_fast.argument.Strategy.InputColumn      =   FACET_DATA_ALL

apply_dir_dep_slow.control.type                       =   calibrate-stand-alone_new
apply_dir_dep_slow.control.mapfiles_in                =   [shift_empty.output.mapfile,expand_merged_parmdb_map.output.mapfile]
apply_dir_dep_slow.control.inputkeys                  =   [inputms,inputparmdb]
apply_dir_dep_slow.argument.observation               =   inputms
apply_dir_dep_slow.argument.parset                    =   {{ parset_dir }}//facet_dirdep_apply_slow.parset
apply_dir_dep_slow.argument.catalog                   =   {{ skymodel_dir }}/empty.skymodel
apply_dir_dep_slow.argument.parmdb                    =   inputparmdb
apply_dir_dep_slow.argument.replace-sourcedb          =   True
apply_dir_dep_slow.argument.replace-parmdb            =   True

average.control.type                                  =   dppp
average.control.mapfile_in                            =   shift_empty.output.mapfile
average.control.inputkey                              =   msin
average.argument.numthreads                           =   {{ max_cpus_per_band }}
average.argument.msin.datacolumn                      =   CORRECTED_DATA
average.argument.msout.overwrite                      =   True
average.argument.msout.writefullresflag               =   False
average.argument.local_scratch_dir                    =   {{ local_dir }}
average.argument.steps                                =   [avg]
average.argument.avg.type                             =   squash
average.argument.avg.freqstep                         =   {{ facetimage_freqstep }}
average.argument.avg.timestep                         =   {{ facetimage_timestep }}

create_compressed_mapfile2.control.kind               =   plugin
create_compressed_mapfile2.control.type               =   compressMapfile
create_compressed_mapfile2.control.mapfile_in         =   average.output.mapfile
create_compressed_mapfile2.control.mapfile_dir        =   input.output.mapfile_dir
create_compressed_mapfile2.control.filename           =   concat_averaged_input.mapfile

{% block full_image_parms %}
wsclean_image_full1.control.type                      =   wsclean
wsclean_image_full1.control.mapfiles_in               =   [create_compressed_mapfile2.output.mapfile,{{ facet_premask_mapfile }}]
wsclean_image_full1.control.inputkeys                 =   [msfile,fitsmask]
wsclean_image_full1.argument.flags                    =   [-no-update-model-required,{{ wsclean_multiscale }}-fitbeam,-reorder,-joinchannels,msfile]
wsclean_image_full1.argument.fitsmask                 =   fitsmask
wsclean_image_full1.argument.size                     =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_image_full1.argument.niter                    =   {{ wsclean_full_image_niter }}
wsclean_image_full1.argument.threshold                =   {{ wsclean_full_image_threshold_jy }}
wsclean_image_full1.argument.pol                      =   I
wsclean_image_full1.argument.weight                   =   briggs -0.5
wsclean_image_full1.argument.mgain                    =   0.6
wsclean_image_full1.argument.cleanborder              =   0
wsclean_image_full1.argument.minuv-l                  =   80
wsclean_image_full1.argument.scale                    =   0.000417
wsclean_image_full1.argument.channelsout              =   {{ wsclean_nchannels }}
wsclean_image_full1.argument.mem                      =   {{ max_percent_memory }}
wsclean_image_full1.argument.j                        =   {{ max_cpus_per_img }}
wsclean_image_full1.argument.tempdir                  =   {{ local_dir }}

create_imagebase_map1.control.kind                    =   plugin
create_imagebase_map1.control.type                    =   trimMapfile
create_imagebase_map1.control.mapfile_in              =   wsclean_image_full1.output.wsclean_image_full1-image.fits.mapfile
create_imagebase_map1.control.trim                    =   -
create_imagebase_map1.control.mapfile_dir             =   input.output.mapfile_dir
create_imagebase_map1.control.filename                =   wsclean_image_full1_image_rootnames.mapfile

adjust_wsclean_mapfile1.control.kind                  =   plugin
adjust_wsclean_mapfile1.control.type                  =   appendMapfile
adjust_wsclean_mapfile1.control.mapfile_in            =   create_imagebase_map1.output.mapfile
adjust_wsclean_mapfile1.control.append                =   {{ wsclean_suffix }}
adjust_wsclean_mapfile1.control.mapfile_dir           =   input.output.mapfile_dir
adjust_wsclean_mapfile1.control.filename              =   image1.mapfile

copy_beam_info.control.type                           =   copy_beam_info
copy_beam_info.control.mapfile_in                     =   adjust_wsclean_mapfile1.output.mapfile
copy_beam_info.control.inputkey                       =   imagefile
copy_beam_info.argument.flags                         =   [imagefile]

mask.control.type                                     =   make_clean_mask
mask.control.mapfile_in                               =   adjust_wsclean_mapfile1.output.mapfile
mask.control.inputkey                                 =   imagefile
mask.control.outputkey                                =   maskfile
mask.argument.flags                                   =   [imagefile,maskfile]
mask.argument.threshisl                               =   3
mask.argument.threshpix                               =   5
mask.argument.rmsbox                                  =   (300,100)
mask.argument.rmsbox_bright                           =   (70,10)
mask.argument.atrous_jmax                             =   3
mask.argument.adaptive_rmsbox                         =   True
mask.argument.atrous_do                               =   True
mask.argument.img_format                              =   fits
mask.argument.nsig                                    =   1.0
mask.argument.vertices_file                           =   {{ vertices_file }}

wsclean_image_full2.control.type                      =   wsclean
wsclean_image_full2.control.mapfiles_in               =   [create_compressed_mapfile2.output.mapfile,mask.output.mapfile,mask.output.threshold_5sig.mapfile]
wsclean_image_full2.control.inputkeys                 =   [msfile,fitsmask,threshold]
wsclean_image_full2.argument.flags                    =   [-no-update-model-required,{{ wsclean_multiscale }}-fitbeam,-reorder,-joinchannels,msfile]
wsclean_image_full2.argument.fitsmask                 =   fitsmask
wsclean_image_full2.argument.size                     =   {{ facet_imsize }} {{ facet_imsize }}
wsclean_image_full2.argument.niter                    =   1000000
wsclean_image_full2.argument.threshold                =   threshold
wsclean_image_full2.argument.pol                      =   I
wsclean_image_full2.argument.weight                   =   briggs -0.5
wsclean_image_full2.argument.mgain                    =   0.6
wsclean_image_full2.argument.cleanborder              =   0
wsclean_image_full2.argument.minuv-l                  =   80
wsclean_image_full2.argument.scale                    =   0.000417
wsclean_image_full2.argument.channelsout              =   {{ wsclean_nchannels }}
wsclean_image_full2.argument.mem                      =   {{ max_percent_memory }}
wsclean_image_full2.argument.j                        =   {{ max_cpus_per_img }}
wsclean_image_full2.argument.tempdir                  =   {{ local_dir }}

create_imagebase_map2.control.kind                    =   plugin
create_imagebase_map2.control.type                    =   trimMapfile
create_imagebase_map2.control.mapfile_in              =   wsclean_image_full2.output.wsclean_image_full2-image.fits.mapfile
create_imagebase_map2.control.trim                    =   -
create_imagebase_map2.control.mapfile_dir             =   input.output.mapfile_dir
create_imagebase_map2.control.filename                =   wsclean_image_full2_image_rootnames.mapfile

adjust_wsclean_mapfile2.control.kind                  =   plugin
adjust_wsclean_mapfile2.control.type                  =   appendMapfile
adjust_wsclean_mapfile2.control.mapfile_in            =   create_imagebase_map2.output.mapfile
adjust_wsclean_mapfile2.control.append                =   {{ wsclean_suffix }}
adjust_wsclean_mapfile2.control.mapfile_dir           =   input.output.mapfile_dir
adjust_wsclean_mapfile2.control.filename              =   final_image.mapfile
{% endblock full_image_parms %}
