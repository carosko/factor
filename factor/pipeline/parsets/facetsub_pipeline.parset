pipeline.steps = [update_diff_models_hosts, update_input_bands_hosts, {% block add_sub_steps %} add_diff_model_to_empty_data {% endblock add_sub_steps %}]

pipeline.pluginpath                                   =   {{ pipeline_dir }}/plugins

# update hosts information in old mapfile, length = nfiles
update_diff_models_hosts.control.kind                 =   plugin
update_diff_models_hosts.control.type                 =   updateHosts
update_diff_models_hosts.control.mapfile_in           =   {{ diff_models_field_mapfile }}
update_diff_models_hosts.control.hosts                =   {{ hosts }}

# update hosts information in old mapfile, length = nfiles
update_input_bands_hosts.control.kind                 =   plugin
update_input_bands_hosts.control.type                 =   updateHosts
update_input_bands_hosts.control.mapfile_in           =   {{ input_files_single_mapfile }}
update_input_bands_hosts.control.hosts                =   {{ hosts }}

{% block add_sub_parms %}
# subtract model difference from facet-selfcal to original data, length = nfiles
add_diff_model_to_empty_data.control.type             =   add_subtract_columns
add_diff_model_to_empty_data.control.opts.mapfiles_in =   [{{ input_files_single_mapfile }},{{ diff_models_field_mapfile }}]
add_diff_model_to_empty_data.control.opts.inputkeys   =   [file1,file2]
add_diff_model_to_empty_data.argument.flags           =   [file1,file2,{{ subtracted_data_colname }},DATA,SUBTRACTED_DATA_ALL_NEW,add]
{% endblock add_sub_parms %}

{% if peel_calibrator %}
# subtract model difference from facet imaging to original data, length = nfiles
copy_to_empty_data.control.type                          =   copy_column
copy_to_empty_data.control.mapfiles_in                   =   [{{ subtracted_data_new_mapfile }},{{ input_files_single_mapfile }}]
copy_to_empty_data.control.inputkeys                     =   [file1,file2]
copy_to_empty_data.argument.flags                        =   [file1,file2,SUBTRACTED_DATA_ALL,SUBTRACTED_DATA_ALL_NEW]
copy_to_empty_data.argument.do_copy                      =   do_copy
{% endif %}
